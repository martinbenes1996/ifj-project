# 2017-12-04 00:15:01.864569
# SECTION: 66_errors
# TEST: 08
# INFO: Assign string into integer
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# pedant.c: P_CheckDataType: l.698: incompatible types
# incompatible types. Line: 10
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:



# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 4
# CURRENT COMPILER EXIT CODE: 4
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' Assign string into integer
#   2: 
#   3: function foo() as string
#   4: 
#   5: end function
#   6: 
#   7: scope
#   8: 	dim a as integer
#   9: 	a = foo()
#  10: 
#  11: end scope

########################################

# Generated code                                                                #     2/38
# IFJ                                                                           #     3/38
# xbenes49 xbolsh00 xpolan09                                                    #     4/38
# 2017                                                                          #     5/38
.IFJcode17                                                                      #     7/38
CREATEFRAME                                                                     #     8/38
PUSHFRAME                                                                       #     9/38
DEFVAR LF@*tmp                                                                  #    10/38
DEFVAR LF@*foo                                                                  #    11/38
DEFVAR LF@*bar                                                                  #    12/38
JUMP $main                                                                      #    13/38
# function foo                                                                  #    16/38
LABEL foo                                                                       #    17/38
PUSHFRAME                                                                       #    18/38
DEFVAR LF@*tmp                                                                  #    19/38
DEFVAR LF@*foo                                                                  #    20/38
DEFVAR LF@*bar                                                                  #    21/38
DEFVAR LF@*ret                                                                  #    22/38
DEFVAR LF@*baaaaa                                                               #    24/38
MOVE LF@*baaaaa string@                                                         #    25/38
CONCAT LF@*baaaaa LF@*baaaaa string@                                            #    26/38
PUSHS LF@*baaaaa                                                                #    27/38
POPS LF@*ret                                                                    #    28/38
CLEARS                                                                          #    29/38
RETURN                                                                          #    30/38
LABEL $main                                                                     #    31/38
DEFVAR LF@a                                                                     #    32/38
PUSHS int@0                                                                     #    33/38
POPS LF@a                                                                       #    34/38
CREATEFRAME                                                                     #    35/38
CALL foo                                                                        #    36/38
POPFRAME                                                                        #    37/38
PUSHS TF@*ret                                                                   #    38/38

