# 2017-12-04 00:15:03.551936
# SECTION: 66_errors
# TEST: 302
# INFO: a > b > 1
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# parser.c: ConditionParse: l.1431: keyword 'then' expected
# keyword 'then' expected. Line: 4
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:



# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 2
# CURRENT COMPILER EXIT CODE: 2
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: scope 
#   2:  dim a as integer 
#   3:  dim b as integer 
#   4:  if a > b > 1 then 
#   5:  else 
#   6:  end if 
#   7:  end scope

########################################

# Generated code                                                                #     2/26
# IFJ                                                                           #     3/26
# xbenes49 xbolsh00 xpolan09                                                    #     4/26
# 2017                                                                          #     5/26
.IFJcode17                                                                      #     7/26
CREATEFRAME                                                                     #     8/26
PUSHFRAME                                                                       #     9/26
DEFVAR LF@*tmp                                                                  #    10/26
DEFVAR LF@*foo                                                                  #    11/26
DEFVAR LF@*bar                                                                  #    12/26
JUMP $main                                                                      #    13/26
LABEL $main                                                                     #    15/26
DEFVAR LF@a                                                                     #    16/26
PUSHS int@0                                                                     #    17/26
POPS LF@a                                                                       #    18/26
DEFVAR LF@b                                                                     #    19/26
PUSHS int@0                                                                     #    20/26
POPS LF@b                                                                       #    21/26
PUSHS LF@a                                                                      #    22/26
PUSHS LF@b                                                                      #    23/26
GTS                                                                             #    24/26
PUSHS bool@true                                                                 #    25/26
JUMPIFNEQS $aaaaaa                                                              #    26/26

