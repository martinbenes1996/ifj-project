# 2017-12-04 00:14:59.089946
# SECTION: 02_functions
# TEST: 11
# INFO: Function call function
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 52 with following arguments:
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: LF@b
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: Const@=20(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=20(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 56 with following arguments:
# Executing instruction: ICALL at line: 57 with following arguments:
# Executing instruction: ILABEL at line: 30 with following arguments:
# Executing instruction: IPUSHFRAME at line: 31 with following arguments:
# Executing instruction: IDEFVAR at line: 32 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 33 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 34 with following arguments:
# Dest: LF@*bar
# Executing instruction: IDEFVAR at line: 35 with following arguments:
# Dest: LF@*ret
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: Const@=40(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=40(int)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 39 with following arguments:
# Executing instruction: ICALL at line: 40 with following arguments:
# Executing instruction: ILABEL at line: 17 with following arguments:
# Executing instruction: IPUSHFRAME at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@*bar
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@*ret
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 24 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@*ret()
# Executing instruction: ICLEARS at line: 25 with following arguments:
# Executing instruction: IRETURN at line: 26 with following arguments:
# Executing instruction: IPOPFRAME at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: TF@*ret=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@a=40(int)
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: LF@a=42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@a=42(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 46 with following arguments:
# Arg1: Stack@=42(int)
# Arg2: Stack@=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 47 with following arguments:
# Arg1: Stack@=84(int)
# Dest: LF@a=42(int)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@a=84(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 49 with following arguments:
# Arg1: Stack@=84(int)
# Dest: LF@*ret()
# Executing instruction: ICLEARS at line: 50 with following arguments:
# Executing instruction: IRETURN at line: 51 with following arguments:
# Executing instruction: IPOPFRAME at line: 58 with following arguments:
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: TF@*ret=84(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 60 with following arguments:
# Arg1: Stack@=84(int)
# Dest: LF@b=20(int)
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: LF@b=84(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 62 with following arguments:
# Arg1: Stack@=84(int)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 63 with following arguments:
# Arg1: LF@*tmp=84(int)
# Executing instruction: ICREATEFRAME at line: 64 with following arguments:
# Executing instruction: ICALL at line: 65 with following arguments:
# Executing instruction: ILABEL at line: 30 with following arguments:
# Executing instruction: IPUSHFRAME at line: 31 with following arguments:
# Executing instruction: IDEFVAR at line: 32 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 33 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 34 with following arguments:
# Dest: LF@*bar
# Executing instruction: IDEFVAR at line: 35 with following arguments:
# Dest: LF@*ret
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: Const@=40(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=40(int)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 39 with following arguments:
# Executing instruction: ICALL at line: 40 with following arguments:
# Executing instruction: ILABEL at line: 17 with following arguments:
# Executing instruction: IPUSHFRAME at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@*bar
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@*ret
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 24 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@*ret()
# Executing instruction: ICLEARS at line: 25 with following arguments:
# Executing instruction: IRETURN at line: 26 with following arguments:
# Executing instruction: IPOPFRAME at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: TF@*ret=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@a=40(int)
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: LF@a=42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@a=42(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 46 with following arguments:
# Arg1: Stack@=42(int)
# Arg2: Stack@=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 47 with following arguments:
# Arg1: Stack@=84(int)
# Dest: LF@a=42(int)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@a=84(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 49 with following arguments:
# Arg1: Stack@=84(int)
# Dest: LF@*ret()
# Executing instruction: ICLEARS at line: 50 with following arguments:
# Executing instruction: IRETURN at line: 51 with following arguments:
# Executing instruction: IPOPFRAME at line: 66 with following arguments:
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: TF@*ret=84(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 68 with following arguments:
# Arg1: Stack@=84(int)
# Dest: LF@b=84(int)
# Executing instruction: IPUSHS at line: 69 with following arguments:
# Arg1: LF@b=84(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 70 with following arguments:
# Arg1: Stack@=84(int)
# Dest: LF@*tmp=84(int)
# Executing instruction: IWRITE at line: 71 with following arguments:
# Arg1: LF@*tmp=84(int)
# Executing instruction: IJUMP at line: 72 with following arguments:
# Executing instruction: ILABEL at line: 73 with following arguments:
# Executing instruction: IGROOT at line: 75 with following arguments:
# I am Groot at 75 (433).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 433 (148+285)
# GROOT: 433
# 
#   1: ' Function call function
#   2: 
#   3: function GHGKghgk55() as integer
#   4: 	return 42
#   5: end function
#   6: 
#   7: function GHGKghgk67() as integer
#   8: 	dim a as integer = 40
#   9: 	a = GHGKghgk55()
#  10: 	a = a + a
#  11: 	return a
#  12: end function
#  13: 
#  14: scope
#  15: 	dim b as integer = 20
#  16: 	b = GHGKghgk67()
#  17: 	print b;
#  18: 	b = GHGKghgk67()
#  19: 	print b;
#  20: end scope

########################################

# Generated code                                                                #     2/73
# IFJ                                                                           #     3/73
# xbenes49 xbolsh00 xpolan09                                                    #     4/73
# 2017                                                                          #     5/73
.IFJcode17                                                                      #     7/73
CREATEFRAME                                                                     #     8/73
PUSHFRAME                                                                       #     9/73
DEFVAR LF@*tmp                                                                  #    10/73
DEFVAR LF@*foo                                                                  #    11/73
DEFVAR LF@*bar                                                                  #    12/73
JUMP $main                                                                      #    13/73
# function ghgkghgk55                                                           #    16/73
LABEL ghgkghgk55                                                                #    17/73
PUSHFRAME                                                                       #    18/73
DEFVAR LF@*tmp                                                                  #    19/73
DEFVAR LF@*foo                                                                  #    20/73
DEFVAR LF@*bar                                                                  #    21/73
DEFVAR LF@*ret                                                                  #    22/73
PUSHS int@42                                                                    #    23/73
POPS LF@*ret                                                                    #    24/73
CLEARS                                                                          #    25/73
RETURN                                                                          #    26/73
# function ghgkghgk67                                                           #    29/73
LABEL ghgkghgk67                                                                #    30/73
PUSHFRAME                                                                       #    31/73
DEFVAR LF@*tmp                                                                  #    32/73
DEFVAR LF@*foo                                                                  #    33/73
DEFVAR LF@*bar                                                                  #    34/73
DEFVAR LF@*ret                                                                  #    35/73
DEFVAR LF@a                                                                     #    36/73
PUSHS int@40                                                                    #    37/73
POPS LF@a                                                                       #    38/73
CREATEFRAME                                                                     #    39/73
CALL ghgkghgk55                                                                 #    40/73
POPFRAME                                                                        #    41/73
PUSHS TF@*ret                                                                   #    42/73
POPS LF@a                                                                       #    43/73
PUSHS LF@a                                                                      #    44/73
PUSHS LF@a                                                                      #    45/73
ADDS                                                                            #    46/73
POPS LF@a                                                                       #    47/73
PUSHS LF@a                                                                      #    48/73
POPS LF@*ret                                                                    #    49/73
CLEARS                                                                          #    50/73
RETURN                                                                          #    51/73
LABEL $main                                                                     #    52/73
DEFVAR LF@b                                                                     #    53/73
PUSHS int@20                                                                    #    54/73
POPS LF@b                                                                       #    55/73
CREATEFRAME                                                                     #    56/73
CALL ghgkghgk67                                                                 #    57/73
POPFRAME                                                                        #    58/73
PUSHS TF@*ret                                                                   #    59/73
POPS LF@b                                                                       #    60/73
PUSHS LF@b                                                                      #    61/73
POPS LF@*tmp                                                                    #    62/73
WRITE LF@*tmp                                                                   #    63/73
CREATEFRAME                                                                     #    64/73
CALL ghgkghgk67                                                                 #    65/73
POPFRAME                                                                        #    66/73
PUSHS TF@*ret                                                                   #    67/73
POPS LF@b                                                                       #    68/73
PUSHS LF@b                                                                      #    69/73
POPS LF@*tmp                                                                    #    70/73
WRITE LF@*tmp                                                                   #    71/73
JUMP $end                                                                       #    72/73
LABEL $end                                                                      #    73/73

