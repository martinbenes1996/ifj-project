# 2017-12-04 00:14:59.453407
# SECTION: 02_functions
# TEST: 28
# INFO: Colision which is OK
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 43 with following arguments:
# Executing instruction: IDEFVAR at line: 44 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 47 with following arguments:
# Executing instruction: ICALL at line: 48 with following arguments:
# Executing instruction: ILABEL at line: 32 with following arguments:
# Executing instruction: IPUSHFRAME at line: 33 with following arguments:
# Executing instruction: IDEFVAR at line: 34 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 35 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: LF@*bar
# Executing instruction: IDEFVAR at line: 37 with following arguments:
# Dest: LF@*ret
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 39 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@*ret()
# Executing instruction: ICLEARS at line: 40 with following arguments:
# Executing instruction: IRETURN at line: 41 with following arguments:
# Executing instruction: IPOPFRAME at line: 49 with following arguments:
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: TF@*ret=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@a=0(int)
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@a=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 53 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 54 with following arguments:
# Arg1: LF@*tmp=42(int)
# Executing instruction: IJUMP at line: 55 with following arguments:
# Executing instruction: ILABEL at line: 56 with following arguments:
# Executing instruction: IGROOT at line: 58 with following arguments:
# I am Groot at 58 (124).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 124 (46+78)
# GROOT: 124
# 
#   1: ' Colision which is OK
#   2: function bar(foo1 as integer) as integer
#   3:     return foo1
#   4: end function
#   5: 
#   6: declare function foo1() as integer
#   7: 
#   8: function foo1() as integer
#   9:     return 42
#  10: end function
#  11: 
#  12: scope
#  13:     dim a as integer 
#  14:     a = foo1()
#  15:     print a;
#  16: end scope

########################################

# Generated code                                                                #     2/56
# IFJ                                                                           #     3/56
# xbenes49 xbolsh00 xpolan09                                                    #     4/56
# 2017                                                                          #     5/56
.IFJcode17                                                                      #     7/56
CREATEFRAME                                                                     #     8/56
PUSHFRAME                                                                       #     9/56
DEFVAR LF@*tmp                                                                  #    10/56
DEFVAR LF@*foo                                                                  #    11/56
DEFVAR LF@*bar                                                                  #    12/56
JUMP $main                                                                      #    13/56
# function bar                                                                  #    16/56
LABEL bar                                                                       #    17/56
PUSHFRAME                                                                       #    18/56
DEFVAR LF@*tmp                                                                  #    19/56
DEFVAR LF@*foo                                                                  #    20/56
DEFVAR LF@*bar                                                                  #    21/56
DEFVAR LF@*ret                                                                  #    22/56
DEFVAR LF@foo1                                                                  #    23/56
MOVE LF@foo1 LF@*1                                                              #    24/56
PUSHS LF@foo1                                                                   #    25/56
POPS LF@*ret                                                                    #    26/56
CLEARS                                                                          #    27/56
RETURN                                                                          #    28/56
# function foo1                                                                 #    31/56
LABEL foo1                                                                      #    32/56
PUSHFRAME                                                                       #    33/56
DEFVAR LF@*tmp                                                                  #    34/56
DEFVAR LF@*foo                                                                  #    35/56
DEFVAR LF@*bar                                                                  #    36/56
DEFVAR LF@*ret                                                                  #    37/56
PUSHS int@42                                                                    #    38/56
POPS LF@*ret                                                                    #    39/56
CLEARS                                                                          #    40/56
RETURN                                                                          #    41/56
LABEL $main                                                                     #    43/56
DEFVAR LF@a                                                                     #    44/56
PUSHS int@0                                                                     #    45/56
POPS LF@a                                                                       #    46/56
CREATEFRAME                                                                     #    47/56
CALL foo1                                                                       #    48/56
POPFRAME                                                                        #    49/56
PUSHS TF@*ret                                                                   #    50/56
POPS LF@a                                                                       #    51/56
PUSHS LF@a                                                                      #    52/56
POPS LF@*tmp                                                                    #    53/56
WRITE LF@*tmp                                                                   #    54/56
JUMP $end                                                                       #    55/56
LABEL $end                                                                      #    56/56

