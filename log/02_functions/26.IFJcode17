# 2017-12-04 00:14:59.439137
# SECTION: 02_functions
# TEST: 26
# INFO: Multiple return inside function
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 36 with following arguments:
# Executing instruction: IDEFVAR at line: 37 with following arguments:
# Dest: LF@b
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 39 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 40 with following arguments:
# Executing instruction: ICALL at line: 41 with following arguments:
# Executing instruction: ILABEL at line: 17 with following arguments:
# Executing instruction: IPUSHFRAME at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@*bar
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@*ret
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 24 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@*ret()
# Executing instruction: ICLEARS at line: 25 with following arguments:
# Executing instruction: IRETURN at line: 26 with following arguments:
# Executing instruction: IPOPFRAME at line: 42 with following arguments:
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: TF@*ret=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 44 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@b=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 47 with following arguments:
# Arg1: LF@*tmp=42(int)
# Executing instruction: IJUMP at line: 48 with following arguments:
# Executing instruction: ILABEL at line: 49 with following arguments:
# Executing instruction: IGROOT at line: 51 with following arguments:
# I am Groot at 51 (124).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 124 (46+78)
# GROOT: 124
# 
#   1: ' Multiple return inside function
#   2: 
#   3: function foo() as integer
#   4: 	return 42
#   5: 	return 31
#   6: 	return 22
#   7: end function
#   8: 
#   9: scope
#  10: 	dim b as integer
#  11: 	b = foo()
#  12: 	print b;
#  13: end scope

########################################

# Generated code                                                                #     2/49
# IFJ                                                                           #     3/49
# xbenes49 xbolsh00 xpolan09                                                    #     4/49
# 2017                                                                          #     5/49
.IFJcode17                                                                      #     7/49
CREATEFRAME                                                                     #     8/49
PUSHFRAME                                                                       #     9/49
DEFVAR LF@*tmp                                                                  #    10/49
DEFVAR LF@*foo                                                                  #    11/49
DEFVAR LF@*bar                                                                  #    12/49
JUMP $main                                                                      #    13/49
# function foo                                                                  #    16/49
LABEL foo                                                                       #    17/49
PUSHFRAME                                                                       #    18/49
DEFVAR LF@*tmp                                                                  #    19/49
DEFVAR LF@*foo                                                                  #    20/49
DEFVAR LF@*bar                                                                  #    21/49
DEFVAR LF@*ret                                                                  #    22/49
PUSHS int@42                                                                    #    23/49
POPS LF@*ret                                                                    #    24/49
CLEARS                                                                          #    25/49
RETURN                                                                          #    26/49
PUSHS int@31                                                                    #    27/49
POPS LF@*ret                                                                    #    28/49
CLEARS                                                                          #    29/49
RETURN                                                                          #    30/49
PUSHS int@22                                                                    #    31/49
POPS LF@*ret                                                                    #    32/49
CLEARS                                                                          #    33/49
RETURN                                                                          #    34/49
LABEL $main                                                                     #    36/49
DEFVAR LF@b                                                                     #    37/49
PUSHS int@0                                                                     #    38/49
POPS LF@b                                                                       #    39/49
CREATEFRAME                                                                     #    40/49
CALL foo                                                                        #    41/49
POPFRAME                                                                        #    42/49
PUSHS TF@*ret                                                                   #    43/49
POPS LF@b                                                                       #    44/49
PUSHS LF@b                                                                      #    45/49
POPS LF@*tmp                                                                    #    46/49
WRITE LF@*tmp                                                                   #    47/49
JUMP $end                                                                       #    48/49
LABEL $end                                                                      #    49/49

