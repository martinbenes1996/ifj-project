# 2017-12-04 00:14:59.160889
# SECTION: 02_functions
# TEST: 14
# INFO: Input in function
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 33 with following arguments:
# Executing instruction: IDEFVAR at line: 34 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: Const@=12(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 36 with following arguments:
# Arg1: Stack@=12(int)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 37 with following arguments:
# Executing instruction: ICALL at line: 38 with following arguments:
# Executing instruction: ILABEL at line: 17 with following arguments:
# Executing instruction: IPUSHFRAME at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@*bar
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@*ret
# Executing instruction: IDEFVAR at line: 23 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 25 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@a()
# Executing instruction: IWRITE at line: 26 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 27 with following arguments:
# Dest: LF@a=10(int)
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@a=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 29 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@*ret()
# Executing instruction: ICLEARS at line: 30 with following arguments:
# Executing instruction: IRETURN at line: 31 with following arguments:
# Executing instruction: IPOPFRAME at line: 39 with following arguments:
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: TF@*ret=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 41 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@a=12(int)
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: LF@a=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 44 with following arguments:
# Arg1: LF@*tmp=42(int)
# Executing instruction: IJUMP at line: 45 with following arguments:
# Executing instruction: ILABEL at line: 46 with following arguments:
# Executing instruction: IGROOT at line: 48 with following arguments:
# I am Groot at 48 (156).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 42
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 156 (57+99)
# GROOT: 156
# 
#   1: ' Input in function
#   2: 
#   3: function dsfs_567() as integer
#   4: 	dim a as integer = 10
#   5: 	input a
#   6: 	return a
#   7: end function
#   8: 
#   9: scope
#  10: 	dim a as integer = 12
#  11: 	a = dsfs_567()
#  12: 	print a;
#  13: end scope

########################################

# Generated code                                                                #     2/46
# IFJ                                                                           #     3/46
# xbenes49 xbolsh00 xpolan09                                                    #     4/46
# 2017                                                                          #     5/46
.IFJcode17                                                                      #     7/46
CREATEFRAME                                                                     #     8/46
PUSHFRAME                                                                       #     9/46
DEFVAR LF@*tmp                                                                  #    10/46
DEFVAR LF@*foo                                                                  #    11/46
DEFVAR LF@*bar                                                                  #    12/46
JUMP $main                                                                      #    13/46
# function dsfs_567                                                             #    16/46
LABEL dsfs_567                                                                  #    17/46
PUSHFRAME                                                                       #    18/46
DEFVAR LF@*tmp                                                                  #    19/46
DEFVAR LF@*foo                                                                  #    20/46
DEFVAR LF@*bar                                                                  #    21/46
DEFVAR LF@*ret                                                                  #    22/46
DEFVAR LF@a                                                                     #    23/46
PUSHS int@10                                                                    #    24/46
POPS LF@a                                                                       #    25/46
WRITE string@?\032                                                              #    26/46
READ LF@a int                                                                   #    27/46
PUSHS LF@a                                                                      #    28/46
POPS LF@*ret                                                                    #    29/46
CLEARS                                                                          #    30/46
RETURN                                                                          #    31/46
LABEL $main                                                                     #    33/46
DEFVAR LF@a                                                                     #    34/46
PUSHS int@12                                                                    #    35/46
POPS LF@a                                                                       #    36/46
CREATEFRAME                                                                     #    37/46
CALL dsfs_567                                                                   #    38/46
POPFRAME                                                                        #    39/46
PUSHS TF@*ret                                                                   #    40/46
POPS LF@a                                                                       #    41/46
PUSHS LF@a                                                                      #    42/46
POPS LF@*tmp                                                                    #    43/46
WRITE LF@*tmp                                                                   #    44/46
JUMP $end                                                                       #    45/46
LABEL $end                                                                      #    46/46

