# 2017-12-04 00:14:59.874043
# SECTION: 02_functions
# TEST: 008
# INFO: function string implicit return
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 31 with following arguments:
# Executing instruction: IDEFVAR at line: 32 with following arguments:
# Dest: LF@a
# Executing instruction: IDEFVAR at line: 33 with following arguments:
# Dest: LF@*caaaaa
# Executing instruction: IMOVE at line: 34 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*caaaaa()
# Executing instruction: ICONCAT at line: 35 with following arguments:
# Arg1: LF@*caaaaa=(string)
# Arg2: Const@=(string)
# Dest: LF@*caaaaa=(string)
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: LF@*caaaaa=(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 37 with following arguments:
# Arg1: Stack@=(string)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 38 with following arguments:
# Executing instruction: ICALL at line: 39 with following arguments:
# Executing instruction: ILABEL at line: 17 with following arguments:
# Executing instruction: IPUSHFRAME at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@*bar
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@*ret
# Executing instruction: IDEFVAR at line: 24 with following arguments:
# Dest: LF@*baaaaa
# Executing instruction: IMOVE at line: 25 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*baaaaa()
# Executing instruction: ICONCAT at line: 26 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Arg2: Const@=(string)
# Dest: LF@*baaaaa=(string)
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 28 with following arguments:
# Arg1: Stack@=(string)
# Dest: LF@*ret()
# Executing instruction: ICLEARS at line: 29 with following arguments:
# Executing instruction: IRETURN at line: 30 with following arguments:
# Executing instruction: IPOPFRAME at line: 40 with following arguments:
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: TF@*ret=(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 42 with following arguments:
# Arg1: Stack@=(string)
# Dest: LF@a=(string)
# Executing instruction: IDEFVAR at line: 43 with following arguments:
# Dest: LF@*daaaaa
# Executing instruction: IMOVE at line: 44 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*daaaaa()
# Executing instruction: ICONCAT at line: 45 with following arguments:
# Arg1: LF@*daaaaa=(string)
# Arg2: LF@a=(string)
# Dest: LF@*daaaaa=(string)
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: LF@*daaaaa=(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 47 with following arguments:
# Arg1: Stack@=(string)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 48 with following arguments:
# Arg1: LF@*tmp=(string)
# Executing instruction: IJUMP at line: 49 with following arguments:
# Executing instruction: ILABEL at line: 50 with following arguments:
# Executing instruction: IGROOT at line: 52 with following arguments:
# I am Groot at 52 (205).
# 
# EXPECTED INTERPRETER STDOUT:



# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 205 (64+141)
# GROOT: 205
# 
#   1: function foo() as string 
#   2:  end function 
#   3:  scope 
#   4:  dim a as string 
#   5:  a = foo() 
#   6:  print a; 
#   7:  end scope

########################################

# Generated code                                                                #     2/50
# IFJ                                                                           #     3/50
# xbenes49 xbolsh00 xpolan09                                                    #     4/50
# 2017                                                                          #     5/50
.IFJcode17                                                                      #     7/50
CREATEFRAME                                                                     #     8/50
PUSHFRAME                                                                       #     9/50
DEFVAR LF@*tmp                                                                  #    10/50
DEFVAR LF@*foo                                                                  #    11/50
DEFVAR LF@*bar                                                                  #    12/50
JUMP $main                                                                      #    13/50
# function foo                                                                  #    16/50
LABEL foo                                                                       #    17/50
PUSHFRAME                                                                       #    18/50
DEFVAR LF@*tmp                                                                  #    19/50
DEFVAR LF@*foo                                                                  #    20/50
DEFVAR LF@*bar                                                                  #    21/50
DEFVAR LF@*ret                                                                  #    22/50
DEFVAR LF@*baaaaa                                                               #    24/50
MOVE LF@*baaaaa string@                                                         #    25/50
CONCAT LF@*baaaaa LF@*baaaaa string@                                            #    26/50
PUSHS LF@*baaaaa                                                                #    27/50
POPS LF@*ret                                                                    #    28/50
CLEARS                                                                          #    29/50
RETURN                                                                          #    30/50
LABEL $main                                                                     #    31/50
DEFVAR LF@a                                                                     #    32/50
DEFVAR LF@*caaaaa                                                               #    33/50
MOVE LF@*caaaaa string@                                                         #    34/50
CONCAT LF@*caaaaa LF@*caaaaa string@                                            #    35/50
PUSHS LF@*caaaaa                                                                #    36/50
POPS LF@a                                                                       #    37/50
CREATEFRAME                                                                     #    38/50
CALL foo                                                                        #    39/50
POPFRAME                                                                        #    40/50
PUSHS TF@*ret                                                                   #    41/50
POPS LF@a                                                                       #    42/50
DEFVAR LF@*daaaaa                                                               #    43/50
MOVE LF@*daaaaa string@                                                         #    44/50
CONCAT LF@*daaaaa LF@*daaaaa LF@a                                               #    45/50
PUSHS LF@*daaaaa                                                                #    46/50
POPS LF@*tmp                                                                    #    47/50
WRITE LF@*tmp                                                                   #    48/50
JUMP $end                                                                       #    49/50
LABEL $end                                                                      #    50/50

