# 2017-12-04 00:14:59.220235
# SECTION: 02_functions
# TEST: 21
# INFO: Recursion of three functions
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: FAIL
# 
# COMPILER STDERR:
# Expression error. Line: -1
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:

#  20


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 2
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' Recursion of three functions
#   2: 
#   3: declare function bar(nn as integer) as integer
#   4: 
#   5: function foo(a as integer) as integer
#   6: 	dim b as integer
#   7: 	if (a = 0) then
#   8: 		return 20
#   9: 	else
#  10: 		b = a - 1
#  11: 		b = bar(b)	
#  12: 		return b
#  13: 	end if
#  14: end function
#  15: 
#  16: function bar(a as integer) as integer
#  17: 	dim b as integer
#  18: 	if (a = 0) then
#  19: 		return 20
#  20: 	else
#  21: 		b = a - 1
#  22: 		b = foo(b)
#  23: 		return b
#  24: 	end if
#  25: end function
#  26: 
#  27: function start(a as integer) as integer
#  28: 
#  29: 	dim b as integer
#  30: 
#  31: 	if (a > 10) then 
#  32: 		b = foo(a)
#  33: 		return b
#  34: 	else
#  35: 		b = bar(a)
#  36: 		return b
#  37: 	end if	
#  38: 
#  39: 	
#  40: end function
#  41: 
#  42: scope
#  43: 	
#  44: 	dim a as integer
#  45: 	a = start(20)
#  46: 	print a;
#  47: 
#  48: 
#  49: end scope

########################################

# Generated code                                                                #     2/27
# IFJ                                                                           #     3/27
# xbenes49 xbolsh00 xpolan09                                                    #     4/27
# 2017                                                                          #     5/27
.IFJcode17                                                                      #     7/27
CREATEFRAME                                                                     #     8/27
PUSHFRAME                                                                       #     9/27
DEFVAR LF@*tmp                                                                  #    10/27
DEFVAR LF@*foo                                                                  #    11/27
DEFVAR LF@*bar                                                                  #    12/27
JUMP $main                                                                      #    13/27
# function foo                                                                  #    16/27
LABEL foo                                                                       #    17/27
PUSHFRAME                                                                       #    18/27
DEFVAR LF@*tmp                                                                  #    19/27
DEFVAR LF@*foo                                                                  #    20/27
DEFVAR LF@*bar                                                                  #    21/27
DEFVAR LF@*ret                                                                  #    22/27
DEFVAR LF@a                                                                     #    23/27
MOVE LF@a LF@*1                                                                 #    24/27
DEFVAR LF@b                                                                     #    25/27
PUSHS int@0                                                                     #    26/27
POPS LF@b                                                                       #    27/27

