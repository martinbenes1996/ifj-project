# 2017-12-04 00:14:59.795553
# SECTION: 02_functions
# TEST: 004
# INFO: Asc value
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@*baaaaa
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*baaaaa()
# Executing instruction: ICONCAT at line: 21 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Arg2: Const@=ahoj(string)
# Dest: LF@*baaaaa=(string)
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: LF@*baaaaa=ahoj(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 25 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@*tmp()
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=ahoj(string)
# Dest: LF@*foo()
# Executing instruction: ISTRLEN at line: 27 with following arguments:
# Arg1: LF@*foo=ahoj(string)
# Dest: LF@*bar()
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@*tmp=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@*bar=4(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 30 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 31 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 32 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: LF@*tmp=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 34 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 35 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 37 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: LF@*foo=ahoj(string)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: LF@*tmp=2(int)
# Dest: Stack@()
# Executing instruction: ISTRI2INTS at line: 40 with following arguments:
# Arg1: Stack@=ahoj(string)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IJUMP at line: 41 with following arguments:
# Executing instruction: ILABEL at line: 44 with following arguments:
# Executing instruction: IPOPS at line: 45 with following arguments:
# Arg1: Stack@=111(int)
# Dest: LF@a=0(int)
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: LF@a=111(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 47 with following arguments:
# Arg1: Stack@=111(int)
# Dest: LF@*tmp=2(int)
# Executing instruction: IWRITE at line: 48 with following arguments:
# Arg1: LF@*tmp=111(int)
# Executing instruction: IJUMP at line: 49 with following arguments:
# Executing instruction: ILABEL at line: 50 with following arguments:
# Executing instruction: IGROOT at line: 52 with following arguments:
# I am Groot at 52 (213).
# 
# STDOUT DIFF:
# --- expected
# +++ actual
# @@ -1 +1 @@

# - 104
# + 111

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: ---
# GROOT: 213
# 
#   1: scope 
#   2:  dim a as integer 
#   3:  a = asc(!"ahoj", 2) 
#   4:  print a; 
#   5:  end scope

########################################

# Generated code                                                                #     2/50
# IFJ                                                                           #     3/50
# xbenes49 xbolsh00 xpolan09                                                    #     4/50
# 2017                                                                          #     5/50
.IFJcode17                                                                      #     7/50
CREATEFRAME                                                                     #     8/50
PUSHFRAME                                                                       #     9/50
DEFVAR LF@*tmp                                                                  #    10/50
DEFVAR LF@*foo                                                                  #    11/50
DEFVAR LF@*bar                                                                  #    12/50
JUMP $main                                                                      #    13/50
LABEL $main                                                                     #    15/50
DEFVAR LF@a                                                                     #    16/50
PUSHS int@0                                                                     #    17/50
POPS LF@a                                                                       #    18/50
DEFVAR LF@*baaaaa                                                               #    19/50
MOVE LF@*baaaaa string@                                                         #    20/50
CONCAT LF@*baaaaa LF@*baaaaa string@ahoj                                        #    21/50
PUSHS LF@*baaaaa                                                                #    22/50
PUSHS int@2                                                                     #    23/50
# asc()                                                                         #    24/50
	POPS LF@*tmp                                                                   #    25/50
	POPS LF@*foo                                                                   #    26/50
	STRLEN LF@*bar LF@*foo                                                         #    27/50
	PUSHS LF@*tmp                                                                  #    28/50
	PUSHS LF@*bar                                                                  #    29/50
	LTS                                                                            #    30/50
	PUSHS bool@true                                                                #    31/50
	JUMPIFNEQS $zero                                                               #    32/50
	PUSHS LF@*tmp                                                                  #    33/50
	PUSHS int@0                                                                    #    34/50
	GTS                                                                            #    35/50
	PUSHS bool@true                                                                #    36/50
	JUMPIFNEQS $zero                                                               #    37/50
		PUSHS LF@*foo                                                                 #    38/50
		PUSHS LF@*tmp                                                                 #    39/50
		STRI2INTS                                                                     #    40/50
		JUMP $aaaaaa                                                                  #    41/50
	LABEL $zero                                                                    #    42/50
	PUSHS int@0                                                                    #    43/50
LABEL $aaaaaa                                                                   #    44/50
POPS LF@a                                                                       #    45/50
PUSHS LF@a                                                                      #    46/50
POPS LF@*tmp                                                                    #    47/50
WRITE LF@*tmp                                                                   #    48/50
JUMP $end                                                                       #    49/50
LABEL $end                                                                      #    50/50

