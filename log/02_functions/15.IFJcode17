# 2017-12-04 00:14:59.181930
# SECTION: 02_functions
# TEST: 15
# INFO: Function call function which have input
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 53 with following arguments:
# Executing instruction: IDEFVAR at line: 54 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 56 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 57 with following arguments:
# Executing instruction: ICALL at line: 58 with following arguments:
# Executing instruction: ILABEL at line: 35 with following arguments:
# Executing instruction: IPUSHFRAME at line: 36 with following arguments:
# Executing instruction: IDEFVAR at line: 37 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 38 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 39 with following arguments:
# Dest: LF@*bar
# Executing instruction: IDEFVAR at line: 40 with following arguments:
# Dest: LF@*ret
# Executing instruction: IDEFVAR at line: 41 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: Const@=12(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=12(int)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 44 with following arguments:
# Executing instruction: ICALL at line: 45 with following arguments:
# Executing instruction: ILABEL at line: 17 with following arguments:
# Executing instruction: IPUSHFRAME at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@*bar
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@*ret
# Executing instruction: IDEFVAR at line: 23 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 25 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@a()
# Executing instruction: IWRITE at line: 26 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 27 with following arguments:
# Dest: LF@a=10(int)
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@a=45(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 29 with following arguments:
# Arg1: Stack@=45(int)
# Dest: LF@*ret()
# Executing instruction: ICLEARS at line: 30 with following arguments:
# Executing instruction: IRETURN at line: 31 with following arguments:
# Executing instruction: IPOPFRAME at line: 46 with following arguments:
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: TF@*ret=45(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 48 with following arguments:
# Arg1: Stack@=45(int)
# Dest: LF@a=12(int)
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@a=45(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 50 with following arguments:
# Arg1: Stack@=45(int)
# Dest: LF@*ret()
# Executing instruction: ICLEARS at line: 51 with following arguments:
# Executing instruction: IRETURN at line: 52 with following arguments:
# Executing instruction: IPOPFRAME at line: 59 with following arguments:
# Executing instruction: IPUSHS at line: 60 with following arguments:
# Arg1: TF@*ret=45(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 61 with following arguments:
# Arg1: Stack@=45(int)
# Dest: LF@a=10(int)
# Executing instruction: IPUSHS at line: 62 with following arguments:
# Arg1: LF@a=45(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 63 with following arguments:
# Arg1: Stack@=45(int)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 64 with following arguments:
# Arg1: LF@*tmp=45(int)
# Executing instruction: IJUMP at line: 65 with following arguments:
# Executing instruction: ILABEL at line: 66 with following arguments:
# Executing instruction: IGROOT at line: 68 with following arguments:
# I am Groot at 68 (238).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
#  45
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 238 (86+152)
# GROOT: 238
# 
#   1: ' Function call function which have input
#   2: 
#   3: function foo() as integer
#   4: 	dim a as integer = 10
#   5: 	input a
#   6: 	return a
#   7: end function
#   8: 
#   9: function ghGHgh654655646() as integer
#  10: 	dim a as integer = 12
#  11: 	a = foo()
#  12: 	return a
#  13: end function
#  14: 
#  15: scope
#  16: 	dim a as integer = 10
#  17: 	a = ghGHgh654655646()
#  18: 	print a;
#  19: end scope

########################################

# Generated code                                                                #     2/66
# IFJ                                                                           #     3/66
# xbenes49 xbolsh00 xpolan09                                                    #     4/66
# 2017                                                                          #     5/66
.IFJcode17                                                                      #     7/66
CREATEFRAME                                                                     #     8/66
PUSHFRAME                                                                       #     9/66
DEFVAR LF@*tmp                                                                  #    10/66
DEFVAR LF@*foo                                                                  #    11/66
DEFVAR LF@*bar                                                                  #    12/66
JUMP $main                                                                      #    13/66
# function foo                                                                  #    16/66
LABEL foo                                                                       #    17/66
PUSHFRAME                                                                       #    18/66
DEFVAR LF@*tmp                                                                  #    19/66
DEFVAR LF@*foo                                                                  #    20/66
DEFVAR LF@*bar                                                                  #    21/66
DEFVAR LF@*ret                                                                  #    22/66
DEFVAR LF@a                                                                     #    23/66
PUSHS int@10                                                                    #    24/66
POPS LF@a                                                                       #    25/66
WRITE string@?\032                                                              #    26/66
READ LF@a int                                                                   #    27/66
PUSHS LF@a                                                                      #    28/66
POPS LF@*ret                                                                    #    29/66
CLEARS                                                                          #    30/66
RETURN                                                                          #    31/66
# function ghghgh654655646                                                      #    34/66
LABEL ghghgh654655646                                                           #    35/66
PUSHFRAME                                                                       #    36/66
DEFVAR LF@*tmp                                                                  #    37/66
DEFVAR LF@*foo                                                                  #    38/66
DEFVAR LF@*bar                                                                  #    39/66
DEFVAR LF@*ret                                                                  #    40/66
DEFVAR LF@a                                                                     #    41/66
PUSHS int@12                                                                    #    42/66
POPS LF@a                                                                       #    43/66
CREATEFRAME                                                                     #    44/66
CALL foo                                                                        #    45/66
POPFRAME                                                                        #    46/66
PUSHS TF@*ret                                                                   #    47/66
POPS LF@a                                                                       #    48/66
PUSHS LF@a                                                                      #    49/66
POPS LF@*ret                                                                    #    50/66
CLEARS                                                                          #    51/66
RETURN                                                                          #    52/66
LABEL $main                                                                     #    53/66
DEFVAR LF@a                                                                     #    54/66
PUSHS int@10                                                                    #    55/66
POPS LF@a                                                                       #    56/66
CREATEFRAME                                                                     #    57/66
CALL ghghgh654655646                                                            #    58/66
POPFRAME                                                                        #    59/66
PUSHS TF@*ret                                                                   #    60/66
POPS LF@a                                                                       #    61/66
PUSHS LF@a                                                                      #    62/66
POPS LF@*tmp                                                                    #    63/66
WRITE LF@*tmp                                                                   #    64/66
JUMP $end                                                                       #    65/66
LABEL $end                                                                      #    66/66

