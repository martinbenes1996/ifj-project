# 2017-12-04 00:14:59.442836
# SECTION: 02_functions
# TEST: 27
# INFO: Condition return
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# pedant.c: P_CheckDataType: l.698: incompatible types
# incompatible types. Line: 13
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:

#  0


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 4
# CURRENT COMPILER EXIT CODE: 4
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' Condition return
#   2: 
#   3: function get_integer(a as integer) as integer
#   4: 	if a < 2 then
#   5: 		return 42
#   6: 	else
#   7: 	end if
#   8: end function
#   9: 
#  10: scope
#  11: 	dim b as string
#  12: 	b = get_integer(25)
#  13: 	print b;
#  14: end scope

########################################

# Generated code                                                                #     2/51
# IFJ                                                                           #     3/51
# xbenes49 xbolsh00 xpolan09                                                    #     4/51
# 2017                                                                          #     5/51
.IFJcode17                                                                      #     7/51
CREATEFRAME                                                                     #     8/51
PUSHFRAME                                                                       #     9/51
DEFVAR LF@*tmp                                                                  #    10/51
DEFVAR LF@*foo                                                                  #    11/51
DEFVAR LF@*bar                                                                  #    12/51
JUMP $main                                                                      #    13/51
# function get_integer                                                          #    16/51
LABEL get_integer                                                               #    17/51
PUSHFRAME                                                                       #    18/51
DEFVAR LF@*tmp                                                                  #    19/51
DEFVAR LF@*foo                                                                  #    20/51
DEFVAR LF@*bar                                                                  #    21/51
DEFVAR LF@*ret                                                                  #    22/51
DEFVAR LF@a                                                                     #    23/51
MOVE LF@a LF@*1                                                                 #    24/51
PUSHS LF@a                                                                      #    25/51
PUSHS int@2                                                                     #    26/51
LTS                                                                             #    27/51
PUSHS bool@true                                                                 #    28/51
JUMPIFNEQS $aaaaaa                                                              #    29/51
PUSHS int@42                                                                    #    30/51
POPS LF@*ret                                                                    #    31/51
CLEARS                                                                          #    32/51
RETURN                                                                          #    33/51
JUMP $baaaaa                                                                    #    34/51
LABEL $aaaaaa                                                                   #    35/51
LABEL $baaaaa                                                                   #    36/51
LABEL $main                                                                     #    38/51
DEFVAR LF@b                                                                     #    39/51
DEFVAR LF@*baaaaa                                                               #    40/51
MOVE LF@*baaaaa string@                                                         #    41/51
CONCAT LF@*baaaaa LF@*baaaaa string@                                            #    42/51
PUSHS LF@*baaaaa                                                                #    43/51
POPS LF@b                                                                       #    44/51
CREATEFRAME                                                                     #    45/51
DEFVAR TF@*1                                                                    #    46/51
PUSHS int@25                                                                    #    47/51
POPS TF@*1                                                                      #    48/51
CALL get_integer                                                                #    49/51
POPFRAME                                                                        #    50/51
PUSHS TF@*ret                                                                   #    51/51

