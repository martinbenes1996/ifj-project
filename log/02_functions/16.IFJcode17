# 2017-12-04 00:14:59.204829
# SECTION: 02_functions
# TEST: 16
# INFO: Function call function which have input
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 68 with following arguments:
# Executing instruction: IDEFVAR at line: 69 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: Const@=9(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 71 with following arguments:
# Arg1: Stack@=9(int)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 72 with following arguments:
# Executing instruction: ICALL at line: 73 with following arguments:
# Executing instruction: ILABEL at line: 50 with following arguments:
# Executing instruction: IPUSHFRAME at line: 51 with following arguments:
# Executing instruction: IDEFVAR at line: 52 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 53 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 54 with following arguments:
# Dest: LF@*bar
# Executing instruction: IDEFVAR at line: 55 with following arguments:
# Dest: LF@*ret
# Executing instruction: IDEFVAR at line: 56 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: Const@=11(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 58 with following arguments:
# Arg1: Stack@=11(int)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 59 with following arguments:
# Executing instruction: ICALL at line: 60 with following arguments:
# Executing instruction: ILABEL at line: 30 with following arguments:
# Executing instruction: IPUSHFRAME at line: 31 with following arguments:
# Executing instruction: IDEFVAR at line: 32 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 33 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 34 with following arguments:
# Dest: LF@*bar
# Executing instruction: IDEFVAR at line: 35 with following arguments:
# Dest: LF@*ret
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@a()
# Executing instruction: ICREATEFRAME at line: 39 with following arguments:
# Executing instruction: ICALL at line: 40 with following arguments:
# Executing instruction: ILABEL at line: 17 with following arguments:
# Executing instruction: IPUSHFRAME at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@*bar
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@*ret
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 24 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@*ret()
# Executing instruction: ICLEARS at line: 25 with following arguments:
# Executing instruction: IRETURN at line: 26 with following arguments:
# Executing instruction: IPOPFRAME at line: 41 with following arguments:
# Executing instruction: IPUSHS at line: 42 with following arguments:
# Arg1: TF@*ret=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 43 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@a=10(int)
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: LF@a=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 45 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@*ret()
# Executing instruction: ICLEARS at line: 46 with following arguments:
# Executing instruction: IRETURN at line: 47 with following arguments:
# Executing instruction: IPOPFRAME at line: 61 with following arguments:
# Executing instruction: IPUSHS at line: 62 with following arguments:
# Arg1: TF@*ret=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 63 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@a=11(int)
# Executing instruction: IPUSHS at line: 64 with following arguments:
# Arg1: LF@a=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 65 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@*ret()
# Executing instruction: ICLEARS at line: 66 with following arguments:
# Executing instruction: IRETURN at line: 67 with following arguments:
# Executing instruction: IPOPFRAME at line: 74 with following arguments:
# Executing instruction: IPUSHS at line: 75 with following arguments:
# Arg1: TF@*ret=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 76 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@a=9(int)
# Executing instruction: IPUSHS at line: 77 with following arguments:
# Arg1: LF@a=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 78 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 79 with following arguments:
# Arg1: LF@*tmp=42(int)
# Executing instruction: IJUMP at line: 80 with following arguments:
# Executing instruction: ILABEL at line: 81 with following arguments:
# Executing instruction: IGROOT at line: 83 with following arguments:
# I am Groot at 83 (288).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 288 (104+184)
# GROOT: 288
# 
#   1: ' Function call function which have input
#   2: 
#   3: function GK6767__() as integer
#   4: 	return 42
#   5: end function
#   6: 
#   7: function GKJ5___GGK() as integer
#   8: 	dim a as integer = 10
#   9: 	a = GK6767__()
#  10: 	return a
#  11: end function
#  12: 
#  13: function foo() as integer
#  14: 	dim a as integer = 11
#  15: 	a = GKJ5___GGK()
#  16: 	return a
#  17: end function
#  18: 
#  19: scope
#  20: 	dim a as integer = 9
#  21: 	a = foo()
#  22: 	print a;
#  23: end scope

########################################

# Generated code                                                                #     2/81
# IFJ                                                                           #     3/81
# xbenes49 xbolsh00 xpolan09                                                    #     4/81
# 2017                                                                          #     5/81
.IFJcode17                                                                      #     7/81
CREATEFRAME                                                                     #     8/81
PUSHFRAME                                                                       #     9/81
DEFVAR LF@*tmp                                                                  #    10/81
DEFVAR LF@*foo                                                                  #    11/81
DEFVAR LF@*bar                                                                  #    12/81
JUMP $main                                                                      #    13/81
# function gk6767__                                                             #    16/81
LABEL gk6767__                                                                  #    17/81
PUSHFRAME                                                                       #    18/81
DEFVAR LF@*tmp                                                                  #    19/81
DEFVAR LF@*foo                                                                  #    20/81
DEFVAR LF@*bar                                                                  #    21/81
DEFVAR LF@*ret                                                                  #    22/81
PUSHS int@42                                                                    #    23/81
POPS LF@*ret                                                                    #    24/81
CLEARS                                                                          #    25/81
RETURN                                                                          #    26/81
# function gkj5___ggk                                                           #    29/81
LABEL gkj5___ggk                                                                #    30/81
PUSHFRAME                                                                       #    31/81
DEFVAR LF@*tmp                                                                  #    32/81
DEFVAR LF@*foo                                                                  #    33/81
DEFVAR LF@*bar                                                                  #    34/81
DEFVAR LF@*ret                                                                  #    35/81
DEFVAR LF@a                                                                     #    36/81
PUSHS int@10                                                                    #    37/81
POPS LF@a                                                                       #    38/81
CREATEFRAME                                                                     #    39/81
CALL gk6767__                                                                   #    40/81
POPFRAME                                                                        #    41/81
PUSHS TF@*ret                                                                   #    42/81
POPS LF@a                                                                       #    43/81
PUSHS LF@a                                                                      #    44/81
POPS LF@*ret                                                                    #    45/81
CLEARS                                                                          #    46/81
RETURN                                                                          #    47/81
# function foo                                                                  #    49/81
LABEL foo                                                                       #    50/81
PUSHFRAME                                                                       #    51/81
DEFVAR LF@*tmp                                                                  #    52/81
DEFVAR LF@*foo                                                                  #    53/81
DEFVAR LF@*bar                                                                  #    54/81
DEFVAR LF@*ret                                                                  #    55/81
DEFVAR LF@a                                                                     #    56/81
PUSHS int@11                                                                    #    57/81
POPS LF@a                                                                       #    58/81
CREATEFRAME                                                                     #    59/81
CALL gkj5___ggk                                                                 #    60/81
POPFRAME                                                                        #    61/81
PUSHS TF@*ret                                                                   #    62/81
POPS LF@a                                                                       #    63/81
PUSHS LF@a                                                                      #    64/81
POPS LF@*ret                                                                    #    65/81
CLEARS                                                                          #    66/81
RETURN                                                                          #    67/81
LABEL $main                                                                     #    68/81
DEFVAR LF@a                                                                     #    69/81
PUSHS int@9                                                                     #    70/81
POPS LF@a                                                                       #    71/81
CREATEFRAME                                                                     #    72/81
CALL foo                                                                        #    73/81
POPFRAME                                                                        #    74/81
PUSHS TF@*ret                                                                   #    75/81
POPS LF@a                                                                       #    76/81
PUSHS LF@a                                                                      #    77/81
POPS LF@*tmp                                                                    #    78/81
WRITE LF@*tmp                                                                   #    79/81
JUMP $end                                                                       #    80/81
LABEL $end                                                                      #    81/81

