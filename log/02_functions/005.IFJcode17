# 2017-12-04 00:14:59.817474
# SECTION: 02_functions
# TEST: 005
# INFO: Chr function
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@c
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@*baaaaa
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*baaaaa()
# Executing instruction: ICONCAT at line: 19 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Arg2: Const@=(string)
# Dest: LF@*baaaaa=(string)
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 21 with following arguments:
# Arg1: Stack@=(string)
# Dest: LF@c()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: Const@=97(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 23 with following arguments:
# Arg1: Stack@=97(int)
# Dest: LF@*tmp()
# Executing instruction: IINT2CHAR at line: 24 with following arguments:
# Arg1: LF@*tmp=97(int)
# Dest: LF@*foo()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: LF@*foo=a(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=a(string)
# Dest: LF@c=(string)
# Executing instruction: IDEFVAR at line: 27 with following arguments:
# Dest: LF@*caaaaa
# Executing instruction: IMOVE at line: 28 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*caaaaa()
# Executing instruction: ICONCAT at line: 29 with following arguments:
# Arg1: LF@*caaaaa=(string)
# Arg2: LF@c=a(string)
# Dest: LF@*caaaaa=(string)
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@*caaaaa=a(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 31 with following arguments:
# Arg1: Stack@=a(string)
# Dest: LF@*tmp=97(int)
# Executing instruction: IWRITE at line: 32 with following arguments:
# Arg1: LF@*tmp=a(string)
# Executing instruction: IJUMP at line: 33 with following arguments:
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: IGROOT at line: 36 with following arguments:
# I am Groot at 36 (150).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 150 (38+112)
# GROOT: 150
# 
#   1: scope 
#   2:  dim c as string 
#   3:  c = chr(97) 
#   4:  print c; 
#   5:  end scope

########################################

# Generated code                                                                #     2/34
# IFJ                                                                           #     3/34
# xbenes49 xbolsh00 xpolan09                                                    #     4/34
# 2017                                                                          #     5/34
.IFJcode17                                                                      #     7/34
CREATEFRAME                                                                     #     8/34
PUSHFRAME                                                                       #     9/34
DEFVAR LF@*tmp                                                                  #    10/34
DEFVAR LF@*foo                                                                  #    11/34
DEFVAR LF@*bar                                                                  #    12/34
JUMP $main                                                                      #    13/34
LABEL $main                                                                     #    15/34
DEFVAR LF@c                                                                     #    16/34
DEFVAR LF@*baaaaa                                                               #    17/34
MOVE LF@*baaaaa string@                                                         #    18/34
CONCAT LF@*baaaaa LF@*baaaaa string@                                            #    19/34
PUSHS LF@*baaaaa                                                                #    20/34
POPS LF@c                                                                       #    21/34
PUSHS int@97                                                                    #    22/34
POPS LF@*tmp                                                                    #    23/34
INT2CHAR LF@*foo LF@*tmp                                                        #    24/34
PUSHS LF@*foo                                                                   #    25/34
POPS LF@c                                                                       #    26/34
DEFVAR LF@*caaaaa                                                               #    27/34
MOVE LF@*caaaaa string@                                                         #    28/34
CONCAT LF@*caaaaa LF@*caaaaa LF@c                                               #    29/34
PUSHS LF@*caaaaa                                                                #    30/34
POPS LF@*tmp                                                                    #    31/34
WRITE LF@*tmp                                                                   #    32/34
JUMP $end                                                                       #    33/34
LABEL $end                                                                      #    34/34

