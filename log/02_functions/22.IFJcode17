# 2017-12-04 00:14:59.241893
# SECTION: 02_functions
# TEST: 22
# INFO: Try to modify an argument passed by the value
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 32 with following arguments:
# Executing instruction: IDEFVAR at line: 33 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 34 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 35 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 37 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@a=0(int)
# Executing instruction: IDEFVAR at line: 38 with following arguments:
# Dest: LF@b
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 40 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 41 with following arguments:
# Executing instruction: IDEFVAR at line: 42 with following arguments:
# Dest: TF@*1
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@a=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 44 with following arguments:
# Arg1: Stack@=10(int)
# Dest: TF@*1()
# Executing instruction: ICALL at line: 45 with following arguments:
# Executing instruction: ILABEL at line: 17 with following arguments:
# Executing instruction: IPUSHFRAME at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@*bar
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@*ret
# Executing instruction: IDEFVAR at line: 23 with following arguments:
# Dest: LF@dj
# Executing instruction: IMOVE at line: 24 with following arguments:
# Arg1: LF@*1=10(int)
# Dest: LF@dj()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=99(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=99(int)
# Dest: LF@dj=10(int)
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 29 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@*ret()
# Executing instruction: ICLEARS at line: 30 with following arguments:
# Executing instruction: IRETURN at line: 31 with following arguments:
# Executing instruction: IPOPFRAME at line: 46 with following arguments:
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: TF@*ret=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 48 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@a=10(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 50 with following arguments:
# Arg1: Stack@=10(int)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 51 with following arguments:
# Arg1: LF@*tmp=10(int)
# Executing instruction: IJUMP at line: 52 with following arguments:
# Executing instruction: ILABEL at line: 53 with following arguments:
# Executing instruction: IGROOT at line: 55 with following arguments:
# I am Groot at 55 (195).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 195 (58+137)
# GROOT: 195
# 
#   1: ' Try to modify an argument passed by the value
#   2: 
#   3: declare function HJHKHJK(hjhjhj as integer) as integer
#   4: 
#   5: function HJHKHJK(dj as integer) as integer
#   6: 	dj = 99
#   7: end function
#   8: 
#   9: 
#  10: 
#  11: SCOPE
#  12: 
#  13: 	dim a as integer
#  14: 	a = 10
#  15: 
#  16: 	dim b as integer
#  17: 	b = HJHKHJK(a)
#  18: 
#  19: 	print a;
#  20: 
#  21: END SCOPE

########################################

# Generated code                                                                #     2/53
# IFJ                                                                           #     3/53
# xbenes49 xbolsh00 xpolan09                                                    #     4/53
# 2017                                                                          #     5/53
.IFJcode17                                                                      #     7/53
CREATEFRAME                                                                     #     8/53
PUSHFRAME                                                                       #     9/53
DEFVAR LF@*tmp                                                                  #    10/53
DEFVAR LF@*foo                                                                  #    11/53
DEFVAR LF@*bar                                                                  #    12/53
JUMP $main                                                                      #    13/53
# function hjhkhjk                                                              #    16/53
LABEL hjhkhjk                                                                   #    17/53
PUSHFRAME                                                                       #    18/53
DEFVAR LF@*tmp                                                                  #    19/53
DEFVAR LF@*foo                                                                  #    20/53
DEFVAR LF@*bar                                                                  #    21/53
DEFVAR LF@*ret                                                                  #    22/53
DEFVAR LF@dj                                                                    #    23/53
MOVE LF@dj LF@*1                                                                #    24/53
PUSHS int@99                                                                    #    25/53
POPS LF@dj                                                                      #    26/53
PUSHS int@0                                                                     #    28/53
POPS LF@*ret                                                                    #    29/53
CLEARS                                                                          #    30/53
RETURN                                                                          #    31/53
LABEL $main                                                                     #    32/53
DEFVAR LF@a                                                                     #    33/53
PUSHS int@0                                                                     #    34/53
POPS LF@a                                                                       #    35/53
PUSHS int@10                                                                    #    36/53
POPS LF@a                                                                       #    37/53
DEFVAR LF@b                                                                     #    38/53
PUSHS int@0                                                                     #    39/53
POPS LF@b                                                                       #    40/53
CREATEFRAME                                                                     #    41/53
DEFVAR TF@*1                                                                    #    42/53
PUSHS LF@a                                                                      #    43/53
POPS TF@*1                                                                      #    44/53
CALL hjhkhjk                                                                    #    45/53
POPFRAME                                                                        #    46/53
PUSHS TF@*ret                                                                   #    47/53
POPS LF@b                                                                       #    48/53
PUSHS LF@a                                                                      #    49/53
POPS LF@*tmp                                                                    #    50/53
WRITE LF@*tmp                                                                   #    51/53
JUMP $end                                                                       #    52/53
LABEL $end                                                                      #    53/53

