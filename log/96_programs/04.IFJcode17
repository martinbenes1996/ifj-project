# 2017-12-04 00:15:03.694793
# SECTION: 96_programs
# TEST: 04
# INFO: Add numbers from 1 to n
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# 32.1-8: syntax error, unexpected ID, expecting END
# 
# EXPECTED INTERPRETER STDOUT:

# ? Soucet cisel do 100 je 5050


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 100
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 51
# PRICE: ---
# GROOT: ---
# 
#   1: ' Add numbers from 1 to n
#   2: scope
#   3:     
#   4:     dim a as integer
#   5:     input a
#   6:     
#   7:     dim b as integer = 1
#   8:     
#   9:     
#  10:     dim soucet as integer
#  11:     do while b <= a
#  12:         soucet = soucet + b
#  13:         b = b + 1
#  14:     loop
#  15:     
#  16:     print !"Soucet cisel do"; a ; !" je"; soucet;
#  17:     
#  18: end scope

########################################

# Generated code                                                                #     2/62
# IFJ                                                                           #     3/62
# xbenes49 xbolsh00 xpolan09                                                    #     4/62
# 2017                                                                          #     5/62
.IFJcode17                                                                      #     7/62
CREATEFRAME                                                                     #     8/62
PUSHFRAME                                                                       #     9/62
DEFVAR LF@*tmp                                                                  #    10/62
DEFVAR LF@*foo                                                                  #    11/62
DEFVAR LF@*bar                                                                  #    12/62
JUMP $main                                                                      #    13/62
LABEL $main                                                                     #    15/62
DEFVAR LF@a                                                                     #    16/62
PUSHS int@0                                                                     #    17/62
POPS LF@a                                                                       #    18/62
WRITE string@?\032                                                              #    19/62
READ LF@a int                                                                   #    20/62
DEFVAR LF@b                                                                     #    21/62
PUSHS int@1                                                                     #    22/62
POPS LF@b                                                                       #    23/62
DEFVAR LF@soucet                                                                #    24/62
PUSHS int@0                                                                     #    25/62
POPS LF@soucet                                                                  #    26/62
LABEL $aaaaaa                                                                   #    27/62
PUSHS LF@b                                                                      #    28/62
PUSHS LF@a                                                                      #    29/62
GTS                                                                             #    30/62
PUSHS bool@true                                                                 #    31/62
JUMIFEQS $baaaaa                                                                #    32/62
PUSHS LF@soucet                                                                 #    33/62
PUSHS LF@b                                                                      #    34/62
ADDS                                                                            #    35/62
POPS LF@soucet                                                                  #    36/62
PUSHS LF@b                                                                      #    37/62
PUSHS int@1                                                                     #    38/62
ADDS                                                                            #    39/62
POPS LF@b                                                                       #    40/62
JUMP $aaaaaa                                                                    #    41/62
LABEL $baaaaa                                                                   #    42/62
DEFVAR LF@*baaaaa                                                               #    43/62
MOVE LF@*baaaaa string@                                                         #    44/62
CONCAT LF@*baaaaa LF@*baaaaa string@Soucet\032cisel\032do                       #    45/62
PUSHS LF@*baaaaa                                                                #    46/62
POPS LF@*tmp                                                                    #    47/62
WRITE LF@*tmp                                                                   #    48/62
PUSHS LF@a                                                                      #    49/62
POPS LF@*tmp                                                                    #    50/62
WRITE LF@*tmp                                                                   #    51/62
DEFVAR LF@*caaaaa                                                               #    52/62
MOVE LF@*caaaaa string@                                                         #    53/62
CONCAT LF@*caaaaa LF@*caaaaa string@\032je                                      #    54/62
PUSHS LF@*caaaaa                                                                #    55/62
POPS LF@*tmp                                                                    #    56/62
WRITE LF@*tmp                                                                   #    57/62
PUSHS LF@soucet                                                                 #    58/62
POPS LF@*tmp                                                                    #    59/62
WRITE LF@*tmp                                                                   #    60/62
JUMP $end                                                                       #    61/62
LABEL $end                                                                      #    62/62

