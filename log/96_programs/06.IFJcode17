# 2017-12-04 00:15:03.747865
# SECTION: 96_programs
# TEST: 06
# INFO: Program to Count Number of Digits in an Integer
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@a()
# Executing instruction: IWRITE at line: 19 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 20 with following arguments:
# Dest: LF@a=0(int)
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@soucet
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 23 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@soucet()
# Executing instruction: ILABEL at line: 24 with following arguments:
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: LF@a=1456534(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IJUMPIFEQS at line: 27 with following arguments:
# Arg1: Stack@=1456534(int)
# Arg2: Stack@=0(int)
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@a=1456534(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=1456534(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 32 with following arguments:
# Arg1: Stack@=1456534(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 33 with following arguments:
# Arg1: Stack@=145653.4(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 34 with following arguments:
# Arg1: Stack@=145653(int)
# Dest: LF@a=1456534(int)
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@soucet=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 37 with following arguments:
# Arg1: Stack@=0(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@soucet=0(int)
# Executing instruction: IJUMP at line: 39 with following arguments:
# Executing instruction: ILABEL at line: 24 with following arguments:
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: LF@a=145653(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IJUMPIFEQS at line: 27 with following arguments:
# Arg1: Stack@=145653(int)
# Arg2: Stack@=0(int)
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@a=145653(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=145653(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 32 with following arguments:
# Arg1: Stack@=145653(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 33 with following arguments:
# Arg1: Stack@=14565.3(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 34 with following arguments:
# Arg1: Stack@=14565(int)
# Dest: LF@a=145653(int)
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@soucet=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 37 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@soucet=1(int)
# Executing instruction: IJUMP at line: 39 with following arguments:
# Executing instruction: ILABEL at line: 24 with following arguments:
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: LF@a=14565(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IJUMPIFEQS at line: 27 with following arguments:
# Arg1: Stack@=14565(int)
# Arg2: Stack@=0(int)
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@a=14565(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=14565(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 32 with following arguments:
# Arg1: Stack@=14565(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 33 with following arguments:
# Arg1: Stack@=1456.5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 34 with following arguments:
# Arg1: Stack@=1456(int)
# Dest: LF@a=14565(int)
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@soucet=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 37 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@soucet=2(int)
# Executing instruction: IJUMP at line: 39 with following arguments:
# Executing instruction: ILABEL at line: 24 with following arguments:
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: LF@a=1456(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IJUMPIFEQS at line: 27 with following arguments:
# Arg1: Stack@=1456(int)
# Arg2: Stack@=0(int)
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@a=1456(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=1456(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 32 with following arguments:
# Arg1: Stack@=1456(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 33 with following arguments:
# Arg1: Stack@=145.6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 34 with following arguments:
# Arg1: Stack@=146(int)
# Dest: LF@a=1456(int)
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@soucet=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 37 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@soucet=3(int)
# Executing instruction: IJUMP at line: 39 with following arguments:
# Executing instruction: ILABEL at line: 24 with following arguments:
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: LF@a=146(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IJUMPIFEQS at line: 27 with following arguments:
# Arg1: Stack@=146(int)
# Arg2: Stack@=0(int)
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@a=146(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=146(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 32 with following arguments:
# Arg1: Stack@=146(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 33 with following arguments:
# Arg1: Stack@=14.6(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 34 with following arguments:
# Arg1: Stack@=15(int)
# Dest: LF@a=146(int)
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@soucet=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 37 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@soucet=4(int)
# Executing instruction: IJUMP at line: 39 with following arguments:
# Executing instruction: ILABEL at line: 24 with following arguments:
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: LF@a=15(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IJUMPIFEQS at line: 27 with following arguments:
# Arg1: Stack@=15(int)
# Arg2: Stack@=0(int)
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@a=15(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=15(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 32 with following arguments:
# Arg1: Stack@=15(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 33 with following arguments:
# Arg1: Stack@=1.5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 34 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@a=15(int)
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@soucet=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 37 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@soucet=5(int)
# Executing instruction: IJUMP at line: 39 with following arguments:
# Executing instruction: ILABEL at line: 24 with following arguments:
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: LF@a=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IJUMPIFEQS at line: 27 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=0(int)
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: LF@a=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 29 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=10(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 32 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=10(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 33 with following arguments:
# Arg1: Stack@=0.2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 34 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@a=2(int)
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@soucet=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 37 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@soucet=6(int)
# Executing instruction: IJUMP at line: 39 with following arguments:
# Executing instruction: ILABEL at line: 24 with following arguments:
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: LF@a=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IJUMPIFEQS at line: 27 with following arguments:
# Arg1: Stack@=0(int)
# Arg2: Stack@=0(int)
# Executing instruction: ILABEL at line: 40 with following arguments:
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: LF@soucet=7(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 42 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 43 with following arguments:
# Arg1: LF@*tmp=7(int)
# Executing instruction: IJUMP at line: 44 with following arguments:
# Executing instruction: ILABEL at line: 45 with following arguments:
# Executing instruction: IGROOT at line: 47 with following arguments:
# I am Groot at 47 (715).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 1456534
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 715 (174+541)
# GROOT: 715
# 
#   1: ' Program to Count Number of Digits in an Integer
#   2: scope
#   3:     dim a as integer
#   4:     input a
#   5:     
#   6:     dim soucet as integer
#   7:     do while a <> 0
#   8:         a = a \ 10
#   9:         soucet = soucet + 1
#  10:     loop
#  11:     
#  12:     print soucet;
#  13: end scope

########################################

# Generated code                                                                #     2/45
# IFJ                                                                           #     3/45
# xbenes49 xbolsh00 xpolan09                                                    #     4/45
# 2017                                                                          #     5/45
.IFJcode17                                                                      #     7/45
CREATEFRAME                                                                     #     8/45
PUSHFRAME                                                                       #     9/45
DEFVAR LF@*tmp                                                                  #    10/45
DEFVAR LF@*foo                                                                  #    11/45
DEFVAR LF@*bar                                                                  #    12/45
JUMP $main                                                                      #    13/45
LABEL $main                                                                     #    15/45
DEFVAR LF@a                                                                     #    16/45
PUSHS int@0                                                                     #    17/45
POPS LF@a                                                                       #    18/45
WRITE string@?\032                                                              #    19/45
READ LF@a int                                                                   #    20/45
DEFVAR LF@soucet                                                                #    21/45
PUSHS int@0                                                                     #    22/45
POPS LF@soucet                                                                  #    23/45
LABEL $aaaaaa                                                                   #    24/45
PUSHS LF@a                                                                      #    25/45
PUSHS int@0                                                                     #    26/45
JUMPIFEQS $baaaaa                                                               #    27/45
PUSHS LF@a                                                                      #    28/45
INT2FLOATS                                                                      #    29/45
PUSHS int@10                                                                    #    30/45
INT2FLOATS                                                                      #    31/45
DIVS                                                                            #    32/45
FLOAT2R2EINTS                                                                   #    33/45
POPS LF@a                                                                       #    34/45
PUSHS LF@soucet                                                                 #    35/45
PUSHS int@1                                                                     #    36/45
ADDS                                                                            #    37/45
POPS LF@soucet                                                                  #    38/45
JUMP $aaaaaa                                                                    #    39/45
LABEL $baaaaa                                                                   #    40/45
PUSHS LF@soucet                                                                 #    41/45
POPS LF@*tmp                                                                    #    42/45
WRITE LF@*tmp                                                                   #    43/45
JUMP $end                                                                       #    44/45
LABEL $end                                                                      #    45/45

