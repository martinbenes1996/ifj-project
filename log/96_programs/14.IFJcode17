# 2017-12-04 00:15:03.794891
# SECTION: 96_programs
# TEST: 14
# INFO: Reverse string function
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: FAIL
# 
# COMPILER STDERR:
# pedant.c: P_HandleTarget: l.634: incompatible type
# incompatible type. Line: 14
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:

# ? gnirtsdesreveratahw


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# whatareversedstring
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 4
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: 'Reverse string function
#   2: 
#   3: function Reverse_str(s as string) as string
#   4: 	dim str_len as integer
#   5: 	str_len = length(s)
#   6: 	dim reversed as string
#   7: 	dim substr_res as string
#   8: 	dim str_len_i as integer
#   9: 
#  10: 	dim i as integer
#  11: 	do while i < str_len
#  12: 		str_len_i = str_len - i
#  13: 		substr_res = substr(s, str_len_i, 1)
#  14: 	   	reversed = reversed + substr_res
#  15: 	   	i = i + 1
#  16: 	loop
#  17: 	
#  18: 	return reversed
#  19: end function
#  20: 
#  21: scope
#  22:     dim s as string
#  23:     input s
#  24:     s = reverse_str(s)
#  25:     print s;
#  26: end scope

########################################

# Generated code                                                                #     2/64
# IFJ                                                                           #     3/64
# xbenes49 xbolsh00 xpolan09                                                    #     4/64
# 2017                                                                          #     5/64
.IFJcode17                                                                      #     7/64
CREATEFRAME                                                                     #     8/64
PUSHFRAME                                                                       #     9/64
DEFVAR LF@*tmp                                                                  #    10/64
DEFVAR LF@*foo                                                                  #    11/64
DEFVAR LF@*bar                                                                  #    12/64
JUMP $main                                                                      #    13/64
# function reverse_str                                                          #    16/64
LABEL reverse_str                                                               #    17/64
PUSHFRAME                                                                       #    18/64
DEFVAR LF@*tmp                                                                  #    19/64
DEFVAR LF@*foo                                                                  #    20/64
DEFVAR LF@*bar                                                                  #    21/64
DEFVAR LF@*ret                                                                  #    22/64
DEFVAR LF@s                                                                     #    23/64
MOVE LF@s LF@*1                                                                 #    24/64
DEFVAR LF@str_len                                                               #    25/64
PUSHS int@0                                                                     #    26/64
POPS LF@str_len                                                                 #    27/64
DEFVAR LF@*baaaaa                                                               #    28/64
MOVE LF@*baaaaa string@                                                         #    29/64
CONCAT LF@*baaaaa LF@*baaaaa LF@s                                               #    30/64
PUSHS LF@*baaaaa                                                                #    31/64
DEFVAR LF@*caaaaa                                                               #    32/64
POPS LF@*caaaaa                                                                 #    33/64
STRLEN LF@*tmp LF@*caaaaa                                                       #    34/64
PUSHS LF@*tmp                                                                   #    35/64
POPS LF@str_len                                                                 #    36/64
DEFVAR LF@reversed                                                              #    37/64
DEFVAR LF@*daaaaa                                                               #    38/64
MOVE LF@*daaaaa string@                                                         #    39/64
CONCAT LF@*daaaaa LF@*daaaaa string@                                            #    40/64
PUSHS LF@*daaaaa                                                                #    41/64
POPS LF@reversed                                                                #    42/64
DEFVAR LF@substr_res                                                            #    43/64
DEFVAR LF@*eaaaaa                                                               #    44/64
MOVE LF@*eaaaaa string@                                                         #    45/64
CONCAT LF@*eaaaaa LF@*eaaaaa string@                                            #    46/64
PUSHS LF@*eaaaaa                                                                #    47/64
POPS LF@substr_res                                                              #    48/64
DEFVAR LF@str_len_i                                                             #    49/64
PUSHS int@0                                                                     #    50/64
POPS LF@str_len_i                                                               #    51/64
DEFVAR LF@i                                                                     #    52/64
PUSHS int@0                                                                     #    53/64
POPS LF@i                                                                       #    54/64
LABEL $aaaaaa                                                                   #    55/64
PUSHS LF@i                                                                      #    56/64
PUSHS LF@str_len                                                                #    57/64
LTS                                                                             #    58/64
PUSHS bool@true                                                                 #    59/64
JUMPIFNEQS $baaaaa                                                              #    60/64
PUSHS LF@str_len                                                                #    61/64
PUSHS LF@i                                                                      #    62/64
SUBS                                                                            #    63/64
POPS LF@str_len_i                                                               #    64/64

