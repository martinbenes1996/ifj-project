# 2017-12-04 00:15:03.942730
# SECTION: 97_optimizations
# TEST: 05
# INFO: constant propagation after function call
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 36 with following arguments:
# Executing instruction: IDEFVAR at line: 37 with following arguments:
# Dest: LF@const
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=25(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 39 with following arguments:
# Arg1: Stack@=25(int)
# Dest: LF@const()
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@const=25(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 41 with following arguments:
# Arg1: Stack@=25(int)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 42 with following arguments:
# Arg1: LF@*tmp=25(int)
# Executing instruction: IDEFVAR at line: 43 with following arguments:
# Dest: LF@*caaaaa
# Executing instruction: IMOVE at line: 44 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*caaaaa()
# Executing instruction: ICONCAT at line: 45 with following arguments:
# Arg1: LF@*caaaaa=(string)
# Arg2: Const@=
# (string)
# Dest: LF@*caaaaa=(string)
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: LF@*caaaaa=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 47 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: LF@*tmp=25(int)
# Executing instruction: IWRITE at line: 48 with following arguments:
# Arg1: LF@*tmp=
# (string)
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@const=25(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 51 with following arguments:
# Arg1: Stack@=25(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 52 with following arguments:
# Arg1: Stack@=50(int)
# Dest: LF@*tmp=
# (string)
# Executing instruction: IWRITE at line: 53 with following arguments:
# Arg1: LF@*tmp=50(int)
# Executing instruction: IDEFVAR at line: 54 with following arguments:
# Dest: LF@*daaaaa
# Executing instruction: IMOVE at line: 55 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*daaaaa()
# Executing instruction: ICONCAT at line: 56 with following arguments:
# Arg1: LF@*daaaaa=(string)
# Arg2: Const@=
# (string)
# Dest: LF@*daaaaa=(string)
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: LF@*daaaaa=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 58 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: LF@*tmp=50(int)
# Executing instruction: IWRITE at line: 59 with following arguments:
# Arg1: LF@*tmp=
# (string)
# Executing instruction: IPUSHS at line: 60 with following arguments:
# Arg1: LF@const=25(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 61 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 62 with following arguments:
# Arg1: Stack@=25(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@const=25(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 64 with following arguments:
# Arg1: Stack@=50(int)
# Arg2: Stack@=25(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 65 with following arguments:
# Arg1: Stack@=75(int)
# Dest: LF@*tmp=
# (string)
# Executing instruction: IWRITE at line: 66 with following arguments:
# Arg1: LF@*tmp=75(int)
# Executing instruction: IDEFVAR at line: 67 with following arguments:
# Dest: LF@*eaaaaa
# Executing instruction: IMOVE at line: 68 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*eaaaaa()
# Executing instruction: ICONCAT at line: 69 with following arguments:
# Arg1: LF@*eaaaaa=(string)
# Arg2: Const@=
# (string)
# Dest: LF@*eaaaaa=(string)
# Executing instruction: IPUSHS at line: 70 with following arguments:
# Arg1: LF@*eaaaaa=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 71 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: LF@*tmp=75(int)
# Executing instruction: IWRITE at line: 72 with following arguments:
# Arg1: LF@*tmp=
# (string)
# Executing instruction: IPUSHS at line: 73 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 74 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 75 with following arguments:
# Arg1: LF@const=25(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 76 with following arguments:
# Arg1: Stack@=25(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 77 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=25(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 78 with following arguments:
# Arg1: Stack@=0.08(double)
# Dest: LF@*tmp=
# (string)
# Executing instruction: IWRITE at line: 79 with following arguments:
# Arg1: LF@*tmp=0.08(double)
# Executing instruction: IDEFVAR at line: 80 with following arguments:
# Dest: LF@*faaaaa
# Executing instruction: IMOVE at line: 81 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*faaaaa()
# Executing instruction: ICONCAT at line: 82 with following arguments:
# Arg1: LF@*faaaaa=(string)
# Arg2: Const@=
# (string)
# Dest: LF@*faaaaa=(string)
# Executing instruction: IPUSHS at line: 83 with following arguments:
# Arg1: LF@*faaaaa=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 84 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: LF@*tmp=0.08(double)
# Executing instruction: IWRITE at line: 85 with following arguments:
# Arg1: LF@*tmp=
# (string)
# Executing instruction: IPUSHS at line: 86 with following arguments:
# Arg1: LF@const=25(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 87 with following arguments:
# Arg1: LF@const=25(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 88 with following arguments:
# Arg1: LF@const=25(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 89 with following arguments:
# Arg1: Stack@=25(int)
# Arg2: Stack@=25(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 90 with following arguments:
# Arg1: Const@=3(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 91 with following arguments:
# Arg1: Stack@=625(int)
# Arg2: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 92 with following arguments:
# Arg1: Stack@=25(int)
# Arg2: Stack@=628(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 93 with following arguments:
# Arg1: Stack@=15700(int)
# Dest: LF@*tmp=
# (string)
# Executing instruction: IWRITE at line: 94 with following arguments:
# Arg1: LF@*tmp=15700(int)
# Executing instruction: IDEFVAR at line: 95 with following arguments:
# Dest: LF@*gaaaaa
# Executing instruction: IMOVE at line: 96 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*gaaaaa()
# Executing instruction: ICONCAT at line: 97 with following arguments:
# Arg1: LF@*gaaaaa=(string)
# Arg2: Const@=
# (string)
# Dest: LF@*gaaaaa=(string)
# Executing instruction: IPUSHS at line: 98 with following arguments:
# Arg1: LF@*gaaaaa=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 99 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: LF@*tmp=15700(int)
# Executing instruction: IWRITE at line: 100 with following arguments:
# Arg1: LF@*tmp=
# (string)
# Executing instruction: IPUSHS at line: 101 with following arguments:
# Arg1: LF@const=25(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 102 with following arguments:
# Arg1: Const@=98(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 103 with following arguments:
# Arg1: Stack@=25(int)
# Arg2: Stack@=98(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 104 with following arguments:
# Arg1: Stack@=-73(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 105 with following arguments:
# Arg1: LF@const=25(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 106 with following arguments:
# Arg1: Const@=6(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 107 with following arguments:
# Arg1: Stack@=25(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 108 with following arguments:
# Arg1: Stack@=31(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 109 with following arguments:
# Arg1: Stack@=-73(double)
# Arg2: Stack@=31(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 110 with following arguments:
# Arg1: LF@const=25(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: LF@const=25(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 112 with following arguments:
# Arg1: Stack@=25(int)
# Arg2: Stack@=25(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 113 with following arguments:
# Arg1: Const@=3(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 114 with following arguments:
# Arg1: Stack@=625(int)
# Arg2: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 115 with following arguments:
# Arg1: Stack@=628(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 116 with following arguments:
# Arg1: Stack@=-2.354838709677419(double)
# Arg2: Stack@=628(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 117 with following arguments:
# Arg1: Stack@=-1478.83870967742(double)
# Dest: LF@*tmp=
# (string)
# Executing instruction: IWRITE at line: 118 with following arguments:
# Arg1: LF@*tmp=-1478.83870967742(double)
# Executing instruction: IDEFVAR at line: 119 with following arguments:
# Dest: LF@*haaaaa
# Executing instruction: IMOVE at line: 120 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*haaaaa()
# Executing instruction: ICONCAT at line: 121 with following arguments:
# Arg1: LF@*haaaaa=(string)
# Arg2: Const@=
# (string)
# Dest: LF@*haaaaa=(string)
# Executing instruction: IPUSHS at line: 122 with following arguments:
# Arg1: LF@*haaaaa=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 123 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: LF@*tmp=-1478.83870967742(double)
# Executing instruction: IWRITE at line: 124 with following arguments:
# Arg1: LF@*tmp=
# (string)
# Executing instruction: ICREATEFRAME at line: 125 with following arguments:
# Executing instruction: ICALL at line: 126 with following arguments:
# Executing instruction: ILABEL at line: 17 with following arguments:
# Executing instruction: IPUSHFRAME at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@*bar
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@*ret
# Executing instruction: IDEFVAR at line: 23 with following arguments:
# Dest: LF@*baaaaa
# Executing instruction: IMOVE at line: 24 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*baaaaa()
# Executing instruction: ICONCAT at line: 25 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Arg2: Const@=Function called!
# (string)
# Dest: LF@*baaaaa=(string)
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: LF@*baaaaa=Function called!
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 27 with following arguments:
# Arg1: Stack@=Function called!
# (string)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 28 with following arguments:
# Arg1: LF@*tmp=Function called!
# (string)
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 31 with following arguments:
# Arg1: Stack@=0(int)
# Arg2: Stack@=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=-42(int)
# Dest: LF@*ret()
# Executing instruction: ICLEARS at line: 33 with following arguments:
# Executing instruction: IRETURN at line: 34 with following arguments:
# Executing instruction: IPOPFRAME at line: 127 with following arguments:
# Executing instruction: IPUSHS at line: 128 with following arguments:
# Arg1: TF@*ret=-42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 129 with following arguments:
# Arg1: Stack@=-42(int)
# Dest: LF@const=25(int)
# Executing instruction: IPUSHS at line: 130 with following arguments:
# Arg1: LF@const=-42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 131 with following arguments:
# Arg1: Stack@=-42(int)
# Dest: LF@*tmp=
# (string)
# Executing instruction: IWRITE at line: 132 with following arguments:
# Arg1: LF@*tmp=-42(int)
# Executing instruction: IDEFVAR at line: 133 with following arguments:
# Dest: LF@*iaaaaa
# Executing instruction: IMOVE at line: 134 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*iaaaaa()
# Executing instruction: ICONCAT at line: 135 with following arguments:
# Arg1: LF@*iaaaaa=(string)
# Arg2: Const@=
# (string)
# Dest: LF@*iaaaaa=(string)
# Executing instruction: IPUSHS at line: 136 with following arguments:
# Arg1: LF@*iaaaaa=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 137 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: LF@*tmp=-42(int)
# Executing instruction: IWRITE at line: 138 with following arguments:
# Arg1: LF@*tmp=
# (string)
# Executing instruction: IPUSHS at line: 139 with following arguments:
# Arg1: LF@const=-42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 140 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 141 with following arguments:
# Arg1: Stack@=-42(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 142 with following arguments:
# Arg1: Stack@=-84(int)
# Dest: LF@*tmp=
# (string)
# Executing instruction: IWRITE at line: 143 with following arguments:
# Arg1: LF@*tmp=-84(int)
# Executing instruction: IDEFVAR at line: 144 with following arguments:
# Dest: LF@*jaaaaa
# Executing instruction: IMOVE at line: 145 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*jaaaaa()
# Executing instruction: ICONCAT at line: 146 with following arguments:
# Arg1: LF@*jaaaaa=(string)
# Arg2: Const@=
# (string)
# Dest: LF@*jaaaaa=(string)
# Executing instruction: IPUSHS at line: 147 with following arguments:
# Arg1: LF@*jaaaaa=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 148 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: LF@*tmp=-84(int)
# Executing instruction: IWRITE at line: 149 with following arguments:
# Arg1: LF@*tmp=
# (string)
# Executing instruction: IPUSHS at line: 150 with following arguments:
# Arg1: LF@const=-42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 151 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 152 with following arguments:
# Arg1: Stack@=-42(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 153 with following arguments:
# Arg1: LF@const=-42(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 154 with following arguments:
# Arg1: Stack@=-84(int)
# Arg2: Stack@=-42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 155 with following arguments:
# Arg1: Stack@=-126(int)
# Dest: LF@*tmp=
# (string)
# Executing instruction: IWRITE at line: 156 with following arguments:
# Arg1: LF@*tmp=-126(int)
# Executing instruction: IDEFVAR at line: 157 with following arguments:
# Dest: LF@*kaaaaa
# Executing instruction: IMOVE at line: 158 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*kaaaaa()
# Executing instruction: ICONCAT at line: 159 with following arguments:
# Arg1: LF@*kaaaaa=(string)
# Arg2: Const@=
# (string)
# Dest: LF@*kaaaaa=(string)
# Executing instruction: IPUSHS at line: 160 with following arguments:
# Arg1: LF@*kaaaaa=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 161 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: LF@*tmp=-126(int)
# Executing instruction: IWRITE at line: 162 with following arguments:
# Arg1: LF@*tmp=
# (string)
# Executing instruction: IPUSHS at line: 163 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 164 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 165 with following arguments:
# Arg1: LF@const=-42(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 166 with following arguments:
# Arg1: Stack@=-42(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 167 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=-42(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 168 with following arguments:
# Arg1: Stack@=-0.04761904761904762(double)
# Dest: LF@*tmp=
# (string)
# Executing instruction: IWRITE at line: 169 with following arguments:
# Arg1: LF@*tmp=-0.04761904761904762(double)
# Executing instruction: IDEFVAR at line: 170 with following arguments:
# Dest: LF@*laaaaa
# Executing instruction: IMOVE at line: 171 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*laaaaa()
# Executing instruction: ICONCAT at line: 172 with following arguments:
# Arg1: LF@*laaaaa=(string)
# Arg2: Const@=
# (string)
# Dest: LF@*laaaaa=(string)
# Executing instruction: IPUSHS at line: 173 with following arguments:
# Arg1: LF@*laaaaa=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 174 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: LF@*tmp=-0.04761904761904762(double)
# Executing instruction: IWRITE at line: 175 with following arguments:
# Arg1: LF@*tmp=
# (string)
# Executing instruction: IPUSHS at line: 176 with following arguments:
# Arg1: LF@const=-42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 177 with following arguments:
# Arg1: LF@const=-42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 178 with following arguments:
# Arg1: LF@const=-42(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 179 with following arguments:
# Arg1: Stack@=-42(int)
# Arg2: Stack@=-42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 180 with following arguments:
# Arg1: Const@=3(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 181 with following arguments:
# Arg1: Stack@=1764(int)
# Arg2: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 182 with following arguments:
# Arg1: Stack@=-42(int)
# Arg2: Stack@=1767(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 183 with following arguments:
# Arg1: Stack@=-74214(int)
# Dest: LF@*tmp=
# (string)
# Executing instruction: IWRITE at line: 184 with following arguments:
# Arg1: LF@*tmp=-74214(int)
# Executing instruction: IDEFVAR at line: 185 with following arguments:
# Dest: LF@*maaaaa
# Executing instruction: IMOVE at line: 186 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*maaaaa()
# Executing instruction: ICONCAT at line: 187 with following arguments:
# Arg1: LF@*maaaaa=(string)
# Arg2: Const@=
# (string)
# Dest: LF@*maaaaa=(string)
# Executing instruction: IPUSHS at line: 188 with following arguments:
# Arg1: LF@*maaaaa=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 189 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: LF@*tmp=-74214(int)
# Executing instruction: IWRITE at line: 190 with following arguments:
# Arg1: LF@*tmp=
# (string)
# Executing instruction: IPUSHS at line: 191 with following arguments:
# Arg1: LF@const=-42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 192 with following arguments:
# Arg1: Const@=98(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 193 with following arguments:
# Arg1: Stack@=-42(int)
# Arg2: Stack@=98(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 194 with following arguments:
# Arg1: Stack@=-140(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 195 with following arguments:
# Arg1: LF@const=-42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 196 with following arguments:
# Arg1: Const@=6(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 197 with following arguments:
# Arg1: Stack@=-42(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 198 with following arguments:
# Arg1: Stack@=-36(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 199 with following arguments:
# Arg1: Stack@=-140(double)
# Arg2: Stack@=-36(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 200 with following arguments:
# Arg1: LF@const=-42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 201 with following arguments:
# Arg1: LF@const=-42(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 202 with following arguments:
# Arg1: Stack@=-42(int)
# Arg2: Stack@=-42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 203 with following arguments:
# Arg1: Const@=3(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 204 with following arguments:
# Arg1: Stack@=1764(int)
# Arg2: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 205 with following arguments:
# Arg1: Stack@=1767(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 206 with following arguments:
# Arg1: Stack@=3.888888888888889(double)
# Arg2: Stack@=1767(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 207 with following arguments:
# Arg1: Stack@=6871.666666666667(double)
# Dest: LF@*tmp=
# (string)
# Executing instruction: IWRITE at line: 208 with following arguments:
# Arg1: LF@*tmp=6871.666666666667(double)
# Executing instruction: IDEFVAR at line: 209 with following arguments:
# Dest: LF@*naaaaa
# Executing instruction: IMOVE at line: 210 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*naaaaa()
# Executing instruction: ICONCAT at line: 211 with following arguments:
# Arg1: LF@*naaaaa=(string)
# Arg2: Const@=
# (string)
# Dest: LF@*naaaaa=(string)
# Executing instruction: IPUSHS at line: 212 with following arguments:
# Arg1: LF@*naaaaa=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 213 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: LF@*tmp=6871.666666666667(double)
# Executing instruction: IWRITE at line: 214 with following arguments:
# Arg1: LF@*tmp=
# (string)
# Executing instruction: IJUMP at line: 215 with following arguments:
# Executing instruction: ILABEL at line: 216 with following arguments:
# Executing instruction: IGROOT at line: 218 with following arguments:
# I am Groot at 218 (1401).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 1401 (386+1015)
# GROOT: 1401
# 
#   1: ' constant propagation after function call
#   2: 
#   3: function function_() as integer
#   4: 	print !"Function called!\n";
#   5: 	return 0 - 42
#   6: end function
#   7: 
#   8: scope
#   9: 	dim const as integer = 25
#  10: 
#  11: 	print const; !"\n";
#  12: 	print const * 2; !"\n";
#  13: 	print const * 2 + const; !"\n";
#  14: 	print 2 / const; !"\n";
#  15: 	print const * (const * const + 3); !"\n";
#  16: 	print (const - 98) / (const + 6) * (const * const + 3); !"\n";
#  17: 
#  18: 	const = function_()
#  19: 
#  20: 	print const; !"\n";
#  21: 	print const * 2; !"\n";
#  22: 	print const * 2 + const; !"\n";
#  23: 	print 2 / const; !"\n";
#  24: 	print const * (const * const + 3); !"\n";
#  25: 	print (const - 98) / (const + 6) * (const * const + 3); !"\n";
#  26: 
#  27: end scope

########################################

# Generated code                                                                #     2/216
# IFJ                                                                           #     3/216
# xbenes49 xbolsh00 xpolan09                                                    #     4/216
# 2017                                                                          #     5/216
.IFJcode17                                                                      #     7/216
CREATEFRAME                                                                     #     8/216
PUSHFRAME                                                                       #     9/216
DEFVAR LF@*tmp                                                                  #    10/216
DEFVAR LF@*foo                                                                  #    11/216
DEFVAR LF@*bar                                                                  #    12/216
JUMP $main                                                                      #    13/216
# function function_                                                            #    16/216
LABEL function_                                                                 #    17/216
PUSHFRAME                                                                       #    18/216
DEFVAR LF@*tmp                                                                  #    19/216
DEFVAR LF@*foo                                                                  #    20/216
DEFVAR LF@*bar                                                                  #    21/216
DEFVAR LF@*ret                                                                  #    22/216
DEFVAR LF@*baaaaa                                                               #    23/216
MOVE LF@*baaaaa string@                                                         #    24/216
CONCAT LF@*baaaaa LF@*baaaaa string@Function\032called!\010                     #    25/216
PUSHS LF@*baaaaa                                                                #    26/216
POPS LF@*tmp                                                                    #    27/216
WRITE LF@*tmp                                                                   #    28/216
PUSHS int@0                                                                     #    29/216
PUSHS int@42                                                                    #    30/216
SUBS                                                                            #    31/216
POPS LF@*ret                                                                    #    32/216
CLEARS                                                                          #    33/216
RETURN                                                                          #    34/216
LABEL $main                                                                     #    36/216
DEFVAR LF@const                                                                 #    37/216
PUSHS int@25                                                                    #    38/216
POPS LF@const                                                                   #    39/216
PUSHS LF@const                                                                  #    40/216
POPS LF@*tmp                                                                    #    41/216
WRITE LF@*tmp                                                                   #    42/216
DEFVAR LF@*caaaaa                                                               #    43/216
MOVE LF@*caaaaa string@                                                         #    44/216
CONCAT LF@*caaaaa LF@*caaaaa string@\010                                        #    45/216
PUSHS LF@*caaaaa                                                                #    46/216
POPS LF@*tmp                                                                    #    47/216
WRITE LF@*tmp                                                                   #    48/216
PUSHS LF@const                                                                  #    49/216
PUSHS int@2                                                                     #    50/216
MULS                                                                            #    51/216
POPS LF@*tmp                                                                    #    52/216
WRITE LF@*tmp                                                                   #    53/216
DEFVAR LF@*daaaaa                                                               #    54/216
MOVE LF@*daaaaa string@                                                         #    55/216
CONCAT LF@*daaaaa LF@*daaaaa string@\010                                        #    56/216
PUSHS LF@*daaaaa                                                                #    57/216
POPS LF@*tmp                                                                    #    58/216
WRITE LF@*tmp                                                                   #    59/216
PUSHS LF@const                                                                  #    60/216
PUSHS int@2                                                                     #    61/216
MULS                                                                            #    62/216
PUSHS LF@const                                                                  #    63/216
ADDS                                                                            #    64/216
POPS LF@*tmp                                                                    #    65/216
WRITE LF@*tmp                                                                   #    66/216
DEFVAR LF@*eaaaaa                                                               #    67/216
MOVE LF@*eaaaaa string@                                                         #    68/216
CONCAT LF@*eaaaaa LF@*eaaaaa string@\010                                        #    69/216
PUSHS LF@*eaaaaa                                                                #    70/216
POPS LF@*tmp                                                                    #    71/216
WRITE LF@*tmp                                                                   #    72/216
PUSHS int@2                                                                     #    73/216
INT2FLOATS                                                                      #    74/216
PUSHS LF@const                                                                  #    75/216
INT2FLOATS                                                                      #    76/216
DIVS                                                                            #    77/216
POPS LF@*tmp                                                                    #    78/216
WRITE LF@*tmp                                                                   #    79/216
DEFVAR LF@*faaaaa                                                               #    80/216
MOVE LF@*faaaaa string@                                                         #    81/216
CONCAT LF@*faaaaa LF@*faaaaa string@\010                                        #    82/216
PUSHS LF@*faaaaa                                                                #    83/216
POPS LF@*tmp                                                                    #    84/216
WRITE LF@*tmp                                                                   #    85/216
PUSHS LF@const                                                                  #    86/216
PUSHS LF@const                                                                  #    87/216
PUSHS LF@const                                                                  #    88/216
MULS                                                                            #    89/216
PUSHS int@3                                                                     #    90/216
ADDS                                                                            #    91/216
MULS                                                                            #    92/216
POPS LF@*tmp                                                                    #    93/216
WRITE LF@*tmp                                                                   #    94/216
DEFVAR LF@*gaaaaa                                                               #    95/216
MOVE LF@*gaaaaa string@                                                         #    96/216
CONCAT LF@*gaaaaa LF@*gaaaaa string@\010                                        #    97/216
PUSHS LF@*gaaaaa                                                                #    98/216
POPS LF@*tmp                                                                    #    99/216
WRITE LF@*tmp                                                                   #   100/216
PUSHS LF@const                                                                  #   101/216
PUSHS int@98                                                                    #   102/216
SUBS                                                                            #   103/216
INT2FLOATS                                                                      #   104/216
PUSHS LF@const                                                                  #   105/216
PUSHS int@6                                                                     #   106/216
ADDS                                                                            #   107/216
INT2FLOATS                                                                      #   108/216
DIVS                                                                            #   109/216
PUSHS LF@const                                                                  #   110/216
PUSHS LF@const                                                                  #   111/216
MULS                                                                            #   112/216
PUSHS int@3                                                                     #   113/216
ADDS                                                                            #   114/216
INT2FLOATS                                                                      #   115/216
MULS                                                                            #   116/216
POPS LF@*tmp                                                                    #   117/216
WRITE LF@*tmp                                                                   #   118/216
DEFVAR LF@*haaaaa                                                               #   119/216
MOVE LF@*haaaaa string@                                                         #   120/216
CONCAT LF@*haaaaa LF@*haaaaa string@\010                                        #   121/216
PUSHS LF@*haaaaa                                                                #   122/216
POPS LF@*tmp                                                                    #   123/216
WRITE LF@*tmp                                                                   #   124/216
CREATEFRAME                                                                     #   125/216
CALL function_                                                                  #   126/216
POPFRAME                                                                        #   127/216
PUSHS TF@*ret                                                                   #   128/216
POPS LF@const                                                                   #   129/216
PUSHS LF@const                                                                  #   130/216
POPS LF@*tmp                                                                    #   131/216
WRITE LF@*tmp                                                                   #   132/216
DEFVAR LF@*iaaaaa                                                               #   133/216
MOVE LF@*iaaaaa string@                                                         #   134/216
CONCAT LF@*iaaaaa LF@*iaaaaa string@\010                                        #   135/216
PUSHS LF@*iaaaaa                                                                #   136/216
POPS LF@*tmp                                                                    #   137/216
WRITE LF@*tmp                                                                   #   138/216
PUSHS LF@const                                                                  #   139/216
PUSHS int@2                                                                     #   140/216
MULS                                                                            #   141/216
POPS LF@*tmp                                                                    #   142/216
WRITE LF@*tmp                                                                   #   143/216
DEFVAR LF@*jaaaaa                                                               #   144/216
MOVE LF@*jaaaaa string@                                                         #   145/216
CONCAT LF@*jaaaaa LF@*jaaaaa string@\010                                        #   146/216
PUSHS LF@*jaaaaa                                                                #   147/216
POPS LF@*tmp                                                                    #   148/216
WRITE LF@*tmp                                                                   #   149/216
PUSHS LF@const                                                                  #   150/216
PUSHS int@2                                                                     #   151/216
MULS                                                                            #   152/216
PUSHS LF@const                                                                  #   153/216
ADDS                                                                            #   154/216
POPS LF@*tmp                                                                    #   155/216
WRITE LF@*tmp                                                                   #   156/216
DEFVAR LF@*kaaaaa                                                               #   157/216
MOVE LF@*kaaaaa string@                                                         #   158/216
CONCAT LF@*kaaaaa LF@*kaaaaa string@\010                                        #   159/216
PUSHS LF@*kaaaaa                                                                #   160/216
POPS LF@*tmp                                                                    #   161/216
WRITE LF@*tmp                                                                   #   162/216
PUSHS int@2                                                                     #   163/216
INT2FLOATS                                                                      #   164/216
PUSHS LF@const                                                                  #   165/216
INT2FLOATS                                                                      #   166/216
DIVS                                                                            #   167/216
POPS LF@*tmp                                                                    #   168/216
WRITE LF@*tmp                                                                   #   169/216
DEFVAR LF@*laaaaa                                                               #   170/216
MOVE LF@*laaaaa string@                                                         #   171/216
CONCAT LF@*laaaaa LF@*laaaaa string@\010                                        #   172/216
PUSHS LF@*laaaaa                                                                #   173/216
POPS LF@*tmp                                                                    #   174/216
WRITE LF@*tmp                                                                   #   175/216
PUSHS LF@const                                                                  #   176/216
PUSHS LF@const                                                                  #   177/216
PUSHS LF@const                                                                  #   178/216
MULS                                                                            #   179/216
PUSHS int@3                                                                     #   180/216
ADDS                                                                            #   181/216
MULS                                                                            #   182/216
POPS LF@*tmp                                                                    #   183/216
WRITE LF@*tmp                                                                   #   184/216
DEFVAR LF@*maaaaa                                                               #   185/216
MOVE LF@*maaaaa string@                                                         #   186/216
CONCAT LF@*maaaaa LF@*maaaaa string@\010                                        #   187/216
PUSHS LF@*maaaaa                                                                #   188/216
POPS LF@*tmp                                                                    #   189/216
WRITE LF@*tmp                                                                   #   190/216
PUSHS LF@const                                                                  #   191/216
PUSHS int@98                                                                    #   192/216
SUBS                                                                            #   193/216
INT2FLOATS                                                                      #   194/216
PUSHS LF@const                                                                  #   195/216
PUSHS int@6                                                                     #   196/216
ADDS                                                                            #   197/216
INT2FLOATS                                                                      #   198/216
DIVS                                                                            #   199/216
PUSHS LF@const                                                                  #   200/216
PUSHS LF@const                                                                  #   201/216
MULS                                                                            #   202/216
PUSHS int@3                                                                     #   203/216
ADDS                                                                            #   204/216
INT2FLOATS                                                                      #   205/216
MULS                                                                            #   206/216
POPS LF@*tmp                                                                    #   207/216
WRITE LF@*tmp                                                                   #   208/216
DEFVAR LF@*naaaaa                                                               #   209/216
MOVE LF@*naaaaa string@                                                         #   210/216
CONCAT LF@*naaaaa LF@*naaaaa string@\010                                        #   211/216
PUSHS LF@*naaaaa                                                                #   212/216
POPS LF@*tmp                                                                    #   213/216
WRITE LF@*tmp                                                                   #   214/216
JUMP $end                                                                       #   215/216
LABEL $end                                                                      #   216/216

