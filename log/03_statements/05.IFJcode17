# 2017-12-04 00:14:59.985441
# SECTION: 03_statements
# TEST: 05
# INFO: input statement
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@a()
# Executing instruction: IWRITE at line: 19 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 20 with following arguments:
# Dest: LF@a=0(int)
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@b
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@*baaaaa
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*baaaaa()
# Executing instruction: ICONCAT at line: 24 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Arg2: Const@=(string)
# Dest: LF@*baaaaa=(string)
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=(string)
# Dest: LF@b()
# Executing instruction: IWRITE at line: 27 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 28 with following arguments:
# Dest: LF@b=(string)
# Executing instruction: IDEFVAR at line: 29 with following arguments:
# Dest: LF@c
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 31 with following arguments:
# Arg1: Stack@=0(double)
# Dest: LF@c()
# Executing instruction: IWRITE at line: 32 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 33 with following arguments:
# Dest: LF@c=0(double)
# Executing instruction: IWRITE at line: 34 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 35 with following arguments:
# Dest: LF@c=78.59999999999999(double)
# Executing instruction: IJUMP at line: 36 with following arguments:
# Executing instruction: ILABEL at line: 37 with following arguments:
# Executing instruction: IGROOT at line: 39 with following arguments:
# I am Groot at 39 (150).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
#   42
# "foo bar"   
# 78.6
# 77E6
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 150 (58+92)
# GROOT: 150
# 
#   1: ' input statement
#   2: scope
#   3: 	dim a as integer
#   4: 	input a
#   5: 
#   6: 	dim b as string
#   7: 	input b
#   8: 
#   9: 	dim c as double
#  10: 	input c
#  11: 	' exponent
#  12: 	input c
#  13: end scope

########################################

# Generated code                                                                #     2/37
# IFJ                                                                           #     3/37
# xbenes49 xbolsh00 xpolan09                                                    #     4/37
# 2017                                                                          #     5/37
.IFJcode17                                                                      #     7/37
CREATEFRAME                                                                     #     8/37
PUSHFRAME                                                                       #     9/37
DEFVAR LF@*tmp                                                                  #    10/37
DEFVAR LF@*foo                                                                  #    11/37
DEFVAR LF@*bar                                                                  #    12/37
JUMP $main                                                                      #    13/37
LABEL $main                                                                     #    15/37
DEFVAR LF@a                                                                     #    16/37
PUSHS int@0                                                                     #    17/37
POPS LF@a                                                                       #    18/37
WRITE string@?\032                                                              #    19/37
READ LF@a int                                                                   #    20/37
DEFVAR LF@b                                                                     #    21/37
DEFVAR LF@*baaaaa                                                               #    22/37
MOVE LF@*baaaaa string@                                                         #    23/37
CONCAT LF@*baaaaa LF@*baaaaa string@                                            #    24/37
PUSHS LF@*baaaaa                                                                #    25/37
POPS LF@b                                                                       #    26/37
WRITE string@?\032                                                              #    27/37
READ LF@b string                                                                #    28/37
DEFVAR LF@c                                                                     #    29/37
PUSHS float@0                                                                   #    30/37
POPS LF@c                                                                       #    31/37
WRITE string@?\032                                                              #    32/37
READ LF@c float                                                                 #    33/37
WRITE string@?\032                                                              #    34/37
READ LF@c float                                                                 #    35/37
JUMP $end                                                                       #    36/37
LABEL $end                                                                      #    37/37

