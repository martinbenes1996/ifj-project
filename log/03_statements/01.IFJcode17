# 2017-12-04 00:14:59.946740
# SECTION: 03_statements
# TEST: 01
# INFO: basic constant assigment
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@*baaaaa
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*baaaaa()
# Executing instruction: ICONCAT at line: 19 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Arg2: Const@=(string)
# Dest: LF@*baaaaa=(string)
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 21 with following arguments:
# Arg1: Stack@=(string)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@*caaaaa
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*caaaaa()
# Executing instruction: ICONCAT at line: 24 with following arguments:
# Arg1: LF@*caaaaa=(string)
# Arg2: Const@=fooman(string)
# Dest: LF@*caaaaa=(string)
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: LF@*caaaaa=fooman(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=fooman(string)
# Dest: LF@a=(string)
# Executing instruction: IDEFVAR at line: 27 with following arguments:
# Dest: LF@b
# Executing instruction: IPUSHS at line: 28 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 29 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 31 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@b=0(int)
# Executing instruction: IDEFVAR at line: 32 with following arguments:
# Dest: LF@c
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 34 with following arguments:
# Arg1: Stack@=0(double)
# Dest: LF@c()
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: Const@=74.84999999999999(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 36 with following arguments:
# Arg1: Stack@=74.84999999999999(double)
# Dest: LF@c=0(double)
# Executing instruction: IDEFVAR at line: 37 with following arguments:
# Dest: LF@*daaaaa
# Executing instruction: IMOVE at line: 38 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*daaaaa()
# Executing instruction: ICONCAT at line: 39 with following arguments:
# Arg1: LF@*daaaaa=(string)
# Arg2: LF@a=fooman(string)
# Dest: LF@*daaaaa=(string)
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@*daaaaa=fooman(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 41 with following arguments:
# Arg1: Stack@=fooman(string)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 42 with following arguments:
# Arg1: LF@*tmp=fooman(string)
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@b=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 44 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@*tmp=fooman(string)
# Executing instruction: IWRITE at line: 45 with following arguments:
# Arg1: LF@*tmp=42(int)
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: LF@c=74.84999999999999(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 47 with following arguments:
# Arg1: Stack@=74.84999999999999(double)
# Dest: LF@*tmp=42(int)
# Executing instruction: IWRITE at line: 48 with following arguments:
# Arg1: LF@*tmp=74.84999999999999(double)
# Executing instruction: IJUMP at line: 49 with following arguments:
# Executing instruction: ILABEL at line: 50 with following arguments:
# Executing instruction: IGROOT at line: 52 with following arguments:
# I am Groot at 52 (251).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 251 (62+189)
# GROOT: 251
# 
#   1: ' basic constant assigment
#   2: scope
#   3: 	dim a as string
#   4: 	a =    !"fooman"
#   5: 
#   6: 	dim b as integer
#   7: 	b =  42
#   8: 
#   9: 	dim c as double
#  10: 	c  =  74.85
#  11: 
#  12: 	print a; b; c;
#  13: end scope

########################################

# Generated code                                                                #     2/50
# IFJ                                                                           #     3/50
# xbenes49 xbolsh00 xpolan09                                                    #     4/50
# 2017                                                                          #     5/50
.IFJcode17                                                                      #     7/50
CREATEFRAME                                                                     #     8/50
PUSHFRAME                                                                       #     9/50
DEFVAR LF@*tmp                                                                  #    10/50
DEFVAR LF@*foo                                                                  #    11/50
DEFVAR LF@*bar                                                                  #    12/50
JUMP $main                                                                      #    13/50
LABEL $main                                                                     #    15/50
DEFVAR LF@a                                                                     #    16/50
DEFVAR LF@*baaaaa                                                               #    17/50
MOVE LF@*baaaaa string@                                                         #    18/50
CONCAT LF@*baaaaa LF@*baaaaa string@                                            #    19/50
PUSHS LF@*baaaaa                                                                #    20/50
POPS LF@a                                                                       #    21/50
DEFVAR LF@*caaaaa                                                               #    22/50
MOVE LF@*caaaaa string@                                                         #    23/50
CONCAT LF@*caaaaa LF@*caaaaa string@fooman                                      #    24/50
PUSHS LF@*caaaaa                                                                #    25/50
POPS LF@a                                                                       #    26/50
DEFVAR LF@b                                                                     #    27/50
PUSHS int@0                                                                     #    28/50
POPS LF@b                                                                       #    29/50
PUSHS int@42                                                                    #    30/50
POPS LF@b                                                                       #    31/50
DEFVAR LF@c                                                                     #    32/50
PUSHS float@0                                                                   #    33/50
POPS LF@c                                                                       #    34/50
PUSHS float@74.85                                                               #    35/50
POPS LF@c                                                                       #    36/50
DEFVAR LF@*daaaaa                                                               #    37/50
MOVE LF@*daaaaa string@                                                         #    38/50
CONCAT LF@*daaaaa LF@*daaaaa LF@a                                               #    39/50
PUSHS LF@*daaaaa                                                                #    40/50
POPS LF@*tmp                                                                    #    41/50
WRITE LF@*tmp                                                                   #    42/50
PUSHS LF@b                                                                      #    43/50
POPS LF@*tmp                                                                    #    44/50
WRITE LF@*tmp                                                                   #    45/50
PUSHS LF@c                                                                      #    46/50
POPS LF@*tmp                                                                    #    47/50
WRITE LF@*tmp                                                                   #    48/50
JUMP $end                                                                       #    49/50
LABEL $end                                                                      #    50/50

