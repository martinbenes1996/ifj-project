# 2017-12-04 00:15:01.595811
# SECTION: 10_unary
# TEST: 04
# INFO: string assignment with plus operator
# REQUIRED EXTENSIONS: UNARY
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@*baaaaa
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*baaaaa()
# Executing instruction: ICONCAT at line: 19 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Arg2: Const@=(string)
# Dest: LF@*baaaaa=(string)
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 21 with following arguments:
# Arg1: Stack@=(string)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@*caaaaa
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*caaaaa()
# Executing instruction: ICONCAT at line: 24 with following arguments:
# Arg1: LF@*caaaaa=(string)
# Arg2: LF@a=(string)
# Dest: LF@*caaaaa=(string)
# Executing instruction: ICONCAT at line: 25 with following arguments:
# Arg1: LF@*caaaaa=(string)
# Arg2: Const@=TOTO(string)
# Dest: LF@*caaaaa=(string)
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: LF@*caaaaa=TOTO(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 27 with following arguments:
# Arg1: Stack@=TOTO(string)
# Dest: LF@a=(string)
# Executing instruction: IDEFVAR at line: 28 with following arguments:
# Dest: LF@*daaaaa
# Executing instruction: IMOVE at line: 29 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*daaaaa()
# Executing instruction: ICONCAT at line: 30 with following arguments:
# Arg1: LF@*daaaaa=(string)
# Arg2: LF@a=TOTO(string)
# Dest: LF@*daaaaa=(string)
# Executing instruction: IPUSHS at line: 31 with following arguments:
# Arg1: LF@*daaaaa=TOTO(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 32 with following arguments:
# Arg1: Stack@=TOTO(string)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 33 with following arguments:
# Arg1: LF@*tmp=TOTO(string)
# Executing instruction: IDEFVAR at line: 34 with following arguments:
# Dest: LF@b
# Executing instruction: IDEFVAR at line: 35 with following arguments:
# Dest: LF@*eaaaaa
# Executing instruction: IMOVE at line: 36 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*eaaaaa()
# Executing instruction: ICONCAT at line: 37 with following arguments:
# Arg1: LF@*eaaaaa=(string)
# Arg2: Const@= JE(string)
# Dest: LF@*eaaaaa=(string)
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: LF@*eaaaaa= JE(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 39 with following arguments:
# Arg1: Stack@= JE(string)
# Dest: LF@b()
# Executing instruction: IDEFVAR at line: 40 with following arguments:
# Dest: LF@*faaaaa
# Executing instruction: IMOVE at line: 41 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*faaaaa()
# Executing instruction: ICONCAT at line: 42 with following arguments:
# Arg1: LF@*faaaaa=(string)
# Arg2: LF@b= JE(string)
# Dest: LF@*faaaaa=(string)
# Executing instruction: ICONCAT at line: 43 with following arguments:
# Arg1: LF@*faaaaa= JE(string)
# Arg2: Const@= ZKOUSKA!(string)
# Dest: LF@*faaaaa= JE(string)
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: LF@*faaaaa= JE ZKOUSKA!(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 45 with following arguments:
# Arg1: Stack@= JE ZKOUSKA!(string)
# Dest: LF@b= JE(string)
# Executing instruction: IDEFVAR at line: 46 with following arguments:
# Dest: LF@*gaaaaa
# Executing instruction: IMOVE at line: 47 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*gaaaaa()
# Executing instruction: ICONCAT at line: 48 with following arguments:
# Arg1: LF@*gaaaaa=(string)
# Arg2: LF@b= JE ZKOUSKA!(string)
# Dest: LF@*gaaaaa=(string)
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@*gaaaaa= JE ZKOUSKA!(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 50 with following arguments:
# Arg1: Stack@= JE ZKOUSKA!(string)
# Dest: LF@*tmp=TOTO(string)
# Executing instruction: IWRITE at line: 51 with following arguments:
# Arg1: LF@*tmp= JE ZKOUSKA!(string)
# Executing instruction: IJUMP at line: 52 with following arguments:
# Executing instruction: ILABEL at line: 53 with following arguments:
# Executing instruction: IGROOT at line: 55 with following arguments:
# I am Groot at 55 (315).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 315 (77+238)
# GROOT: 315
# 
#   1: ' string assignment with plus operator
#   2: scope
#   3: 	dim a as string
#   4: 	a += !"TOTO"
#   5: 	print a;
#   6: 
#   7: 	dim b as string = !" JE"
#   8: 	b += !" ZKOUSKA!"
#   9: 	print b;
#  10: end scope

########################################

# Generated code                                                                #     2/53
# IFJ                                                                           #     3/53
# xbenes49 xbolsh00 xpolan09                                                    #     4/53
# 2017                                                                          #     5/53
.IFJcode17                                                                      #     7/53
CREATEFRAME                                                                     #     8/53
PUSHFRAME                                                                       #     9/53
DEFVAR LF@*tmp                                                                  #    10/53
DEFVAR LF@*foo                                                                  #    11/53
DEFVAR LF@*bar                                                                  #    12/53
JUMP $main                                                                      #    13/53
LABEL $main                                                                     #    15/53
DEFVAR LF@a                                                                     #    16/53
DEFVAR LF@*baaaaa                                                               #    17/53
MOVE LF@*baaaaa string@                                                         #    18/53
CONCAT LF@*baaaaa LF@*baaaaa string@                                            #    19/53
PUSHS LF@*baaaaa                                                                #    20/53
POPS LF@a                                                                       #    21/53
DEFVAR LF@*caaaaa                                                               #    22/53
MOVE LF@*caaaaa string@                                                         #    23/53
CONCAT LF@*caaaaa LF@*caaaaa LF@a                                               #    24/53
CONCAT LF@*caaaaa LF@*caaaaa string@TOTO                                        #    25/53
PUSHS LF@*caaaaa                                                                #    26/53
POPS LF@a                                                                       #    27/53
DEFVAR LF@*daaaaa                                                               #    28/53
MOVE LF@*daaaaa string@                                                         #    29/53
CONCAT LF@*daaaaa LF@*daaaaa LF@a                                               #    30/53
PUSHS LF@*daaaaa                                                                #    31/53
POPS LF@*tmp                                                                    #    32/53
WRITE LF@*tmp                                                                   #    33/53
DEFVAR LF@b                                                                     #    34/53
DEFVAR LF@*eaaaaa                                                               #    35/53
MOVE LF@*eaaaaa string@                                                         #    36/53
CONCAT LF@*eaaaaa LF@*eaaaaa string@\032JE                                      #    37/53
PUSHS LF@*eaaaaa                                                                #    38/53
POPS LF@b                                                                       #    39/53
DEFVAR LF@*faaaaa                                                               #    40/53
MOVE LF@*faaaaa string@                                                         #    41/53
CONCAT LF@*faaaaa LF@*faaaaa LF@b                                               #    42/53
CONCAT LF@*faaaaa LF@*faaaaa string@\032ZKOUSKA!                                #    43/53
PUSHS LF@*faaaaa                                                                #    44/53
POPS LF@b                                                                       #    45/53
DEFVAR LF@*gaaaaa                                                               #    46/53
MOVE LF@*gaaaaa string@                                                         #    47/53
CONCAT LF@*gaaaaa LF@*gaaaaa LF@b                                               #    48/53
PUSHS LF@*gaaaaa                                                                #    49/53
POPS LF@*tmp                                                                    #    50/53
WRITE LF@*tmp                                                                   #    51/53
JUMP $end                                                                       #    52/53
LABEL $end                                                                      #    53/53

