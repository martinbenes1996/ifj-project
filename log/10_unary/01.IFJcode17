# 2017-12-04 00:15:01.566059
# SECTION: 10_unary
# TEST: 01
# INFO: assignment with operators
# REQUIRED EXTENSIONS: UNARY
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: FAIL
# 
# COMPILER STDERR:
# Expression error. Line: -1
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:

#  2 8 4 2 4bar foo 


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 2
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' assignment with operators
#   2: scope
#   3: 	dim a as double
#   4: 	a += 2.0e0
#   5: 	print a;
#   6: 	a *= 4.00e0
#   7: 	print a;
#   8: 	a -= 4
#   9: 	print a;
#  10: 	a /= 2
#  11: 	print a;
#  12: 	dim b as integer = 48
#  13: 	b \= 12
#  14: 	print b;
#  15: 
#  16: 	dim c as string = !"bar"
#  17: 	c += !" foo" + !" "
#  18: 	print c;
#  19: end scope

########################################

# Generated code                                                                #     2/18
# IFJ                                                                           #     3/18
# xbenes49 xbolsh00 xpolan09                                                    #     4/18
# 2017                                                                          #     5/18
.IFJcode17                                                                      #     7/18
CREATEFRAME                                                                     #     8/18
PUSHFRAME                                                                       #     9/18
DEFVAR LF@*tmp                                                                  #    10/18
DEFVAR LF@*foo                                                                  #    11/18
DEFVAR LF@*bar                                                                  #    12/18
JUMP $main                                                                      #    13/18
LABEL $main                                                                     #    15/18
DEFVAR LF@a                                                                     #    16/18
PUSHS float@0                                                                   #    17/18
POPS LF@a                                                                       #    18/18

