# 2017-12-04 00:14:58.924824
# SECTION: 01_basic
# TEST: 008
# INFO: Add two inputs
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@b
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 21 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@b()
# Executing instruction: IWRITE at line: 22 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 23 with following arguments:
# Dest: LF@a=0(int)
# Executing instruction: IWRITE at line: 24 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 25 with following arguments:
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: LF@a=42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@b=24(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 28 with following arguments:
# Arg1: Stack@=42(int)
# Arg2: Stack@=24(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 29 with following arguments:
# Arg1: Stack@=66(int)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 30 with following arguments:
# Arg1: LF@*tmp=66(int)
# Executing instruction: IJUMP at line: 31 with following arguments:
# Executing instruction: ILABEL at line: 32 with following arguments:
# Executing instruction: IGROOT at line: 34 with following arguments:
# I am Groot at 34 (119).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 42
# 24
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 119 (43+76)
# GROOT: 119
# 
#   1: scope 
#   2:  dim a as integer 
#   3:  dim b as integer 
#   4:  input a 
#   5:  input b 
#   6:  print a + b; 
#   7: end scope

########################################

# Generated code                                                                #     2/32
# IFJ                                                                           #     3/32
# xbenes49 xbolsh00 xpolan09                                                    #     4/32
# 2017                                                                          #     5/32
.IFJcode17                                                                      #     7/32
CREATEFRAME                                                                     #     8/32
PUSHFRAME                                                                       #     9/32
DEFVAR LF@*tmp                                                                  #    10/32
DEFVAR LF@*foo                                                                  #    11/32
DEFVAR LF@*bar                                                                  #    12/32
JUMP $main                                                                      #    13/32
LABEL $main                                                                     #    15/32
DEFVAR LF@a                                                                     #    16/32
PUSHS int@0                                                                     #    17/32
POPS LF@a                                                                       #    18/32
DEFVAR LF@b                                                                     #    19/32
PUSHS int@0                                                                     #    20/32
POPS LF@b                                                                       #    21/32
WRITE string@?\032                                                              #    22/32
READ LF@a int                                                                   #    23/32
WRITE string@?\032                                                              #    24/32
READ LF@b int                                                                   #    25/32
PUSHS LF@a                                                                      #    26/32
PUSHS LF@b                                                                      #    27/32
ADDS                                                                            #    28/32
POPS LF@*tmp                                                                    #    29/32
WRITE LF@*tmp                                                                   #    30/32
JUMP $end                                                                       #    31/32
LABEL $end                                                                      #    32/32

