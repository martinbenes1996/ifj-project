# 2017-12-04 00:14:58.031112
# SECTION: 01_basic
# TEST: 12
# INFO: Print input
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@hdghaskljkl
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@*baaaaa
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*baaaaa()
# Executing instruction: ICONCAT at line: 19 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Arg2: Const@=(string)
# Dest: LF@*baaaaa=(string)
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 21 with following arguments:
# Arg1: Stack@=(string)
# Dest: LF@hdghaskljkl()
# Executing instruction: IWRITE at line: 22 with following arguments:
# Arg1: Const@=? (string)
# Executing instruction: IREAD at line: 23 with following arguments:
# Dest: LF@hdghaskljkl=(string)
# Executing instruction: IDEFVAR at line: 24 with following arguments:
# Dest: LF@*caaaaa
# Executing instruction: IMOVE at line: 25 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*caaaaa()
# Executing instruction: ICONCAT at line: 26 with following arguments:
# Arg1: LF@*caaaaa=(string)
# Arg2: LF@hdghaskljkl=Martin Kobelka napsal tento test(string)
# Dest: LF@*caaaaa=(string)
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: LF@*caaaaa=Martin Kobelka napsal tento test(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 28 with following arguments:
# Arg1: Stack@=Martin Kobelka napsal tento test(string)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 29 with following arguments:
# Arg1: LF@*tmp=Martin Kobelka napsal tento test(string)
# Executing instruction: IJUMP at line: 30 with following arguments:
# Executing instruction: ILABEL at line: 31 with following arguments:
# Executing instruction: IGROOT at line: 33 with following arguments:
# I am Groot at 33 (128).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# Martin Kobelka napsal tento test
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 128 (40+88)
# GROOT: 128
# 
#   1: ' Print input
#   2: 
#   3: SCOPE
#   4: 
#   5: 	dim hdghaskljkl as string
#   6: 
#   7: 	input hdghaskljkl
#   8: 
#   9: 	print hdghaskljkl;
#  10: 
#  11: END SCOPE

########################################

# Generated code                                                                #     2/31
# IFJ                                                                           #     3/31
# xbenes49 xbolsh00 xpolan09                                                    #     4/31
# 2017                                                                          #     5/31
.IFJcode17                                                                      #     7/31
CREATEFRAME                                                                     #     8/31
PUSHFRAME                                                                       #     9/31
DEFVAR LF@*tmp                                                                  #    10/31
DEFVAR LF@*foo                                                                  #    11/31
DEFVAR LF@*bar                                                                  #    12/31
JUMP $main                                                                      #    13/31
LABEL $main                                                                     #    15/31
DEFVAR LF@hdghaskljkl                                                           #    16/31
DEFVAR LF@*baaaaa                                                               #    17/31
MOVE LF@*baaaaa string@                                                         #    18/31
CONCAT LF@*baaaaa LF@*baaaaa string@                                            #    19/31
PUSHS LF@*baaaaa                                                                #    20/31
POPS LF@hdghaskljkl                                                             #    21/31
WRITE string@?\032                                                              #    22/31
READ LF@hdghaskljkl string                                                      #    23/31
DEFVAR LF@*caaaaa                                                               #    24/31
MOVE LF@*caaaaa string@                                                         #    25/31
CONCAT LF@*caaaaa LF@*caaaaa LF@hdghaskljkl                                     #    26/31
PUSHS LF@*caaaaa                                                                #    27/31
POPS LF@*tmp                                                                    #    28/31
WRITE LF@*tmp                                                                   #    29/31
JUMP $end                                                                       #    30/31
LABEL $end                                                                      #    31/31

