# 2017-12-04 00:14:58.818796
# SECTION: 01_basic
# TEST: 32
# INFO: Case sensitive
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 30 with following arguments:
# Executing instruction: IDEFVAR at line: 31 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 32 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 33 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 34 with following arguments:
# Arg1: Const@=5(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 35 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@a=0(int)
# Executing instruction: IDEFVAR at line: 36 with following arguments:
# Dest: LF@b
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@b()
# Executing instruction: ICREATEFRAME at line: 39 with following arguments:
# Executing instruction: IDEFVAR at line: 40 with following arguments:
# Dest: TF@*1
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: Const@=5(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 42 with following arguments:
# Arg1: Stack@=5(int)
# Dest: TF@*1()
# Executing instruction: ICALL at line: 43 with following arguments:
# Executing instruction: ILABEL at line: 17 with following arguments:
# Executing instruction: IPUSHFRAME at line: 18 with following arguments:
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 20 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@*bar
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@*ret
# Executing instruction: IDEFVAR at line: 23 with following arguments:
# Dest: LF@a
# Executing instruction: IMOVE at line: 24 with following arguments:
# Arg1: LF@*1=5(int)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=5(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@*ret()
# Executing instruction: ICLEARS at line: 27 with following arguments:
# Executing instruction: IRETURN at line: 28 with following arguments:
# Executing instruction: IPOPFRAME at line: 44 with following arguments:
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: TF@*ret=5(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 46 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@b=0(int)
# Executing instruction: IPUSHS at line: 47 with following arguments:
# Arg1: LF@a=5(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 48 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 49 with following arguments:
# Arg1: LF@*tmp=5(int)
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@b=5(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@*tmp=5(int)
# Executing instruction: IWRITE at line: 52 with following arguments:
# Arg1: LF@*tmp=5(int)
# Executing instruction: IJUMP at line: 53 with following arguments:
# Executing instruction: ILABEL at line: 54 with following arguments:
# Executing instruction: IGROOT at line: 56 with following arguments:
# I am Groot at 56 (203).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 203 (62+141)
# GROOT: 203
# 
#   1: ' Case sensitive
#   2: 
#   3: function fun(a as integer) as integer
#   4: 	return 5
#   5: end function
#   6: 
#   7: scope
#   8:     dim a as integer
#   9:     A = 5
#  10:     dim b as integer
#  11:     b = FuN(5)
#  12:     
#  13:     print a; b;
#  14: 
#  15: end scope

########################################

# Generated code                                                                #     2/54
# IFJ                                                                           #     3/54
# xbenes49 xbolsh00 xpolan09                                                    #     4/54
# 2017                                                                          #     5/54
.IFJcode17                                                                      #     7/54
CREATEFRAME                                                                     #     8/54
PUSHFRAME                                                                       #     9/54
DEFVAR LF@*tmp                                                                  #    10/54
DEFVAR LF@*foo                                                                  #    11/54
DEFVAR LF@*bar                                                                  #    12/54
JUMP $main                                                                      #    13/54
# function fun                                                                  #    16/54
LABEL fun                                                                       #    17/54
PUSHFRAME                                                                       #    18/54
DEFVAR LF@*tmp                                                                  #    19/54
DEFVAR LF@*foo                                                                  #    20/54
DEFVAR LF@*bar                                                                  #    21/54
DEFVAR LF@*ret                                                                  #    22/54
DEFVAR LF@a                                                                     #    23/54
MOVE LF@a LF@*1                                                                 #    24/54
PUSHS int@5                                                                     #    25/54
POPS LF@*ret                                                                    #    26/54
CLEARS                                                                          #    27/54
RETURN                                                                          #    28/54
LABEL $main                                                                     #    30/54
DEFVAR LF@a                                                                     #    31/54
PUSHS int@0                                                                     #    32/54
POPS LF@a                                                                       #    33/54
PUSHS int@5                                                                     #    34/54
POPS LF@a                                                                       #    35/54
DEFVAR LF@b                                                                     #    36/54
PUSHS int@0                                                                     #    37/54
POPS LF@b                                                                       #    38/54
CREATEFRAME                                                                     #    39/54
DEFVAR TF@*1                                                                    #    40/54
PUSHS int@5                                                                     #    41/54
POPS TF@*1                                                                      #    42/54
CALL fun                                                                        #    43/54
POPFRAME                                                                        #    44/54
PUSHS TF@*ret                                                                   #    45/54
POPS LF@b                                                                       #    46/54
PUSHS LF@a                                                                      #    47/54
POPS LF@*tmp                                                                    #    48/54
WRITE LF@*tmp                                                                   #    49/54
PUSHS LF@b                                                                      #    50/54
POPS LF@*tmp                                                                    #    51/54
WRITE LF@*tmp                                                                   #    52/54
JUMP $end                                                                       #    53/54
LABEL $end                                                                      #    54/54

