# 2017-12-04 00:15:03.968744
# SECTION: 99_benchmarks
# TEST: 04
# INFO: complex expression
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=74(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=74(int)
# Dest: LF@a()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@b
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=745.745(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 21 with following arguments:
# Arg1: Stack@=745.745(double)
# Dest: LF@b()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@c
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=123456789(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 25 with following arguments:
# Arg1: Stack@=0(int)
# Arg2: Stack@=123456789(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 26 with following arguments:
# Arg1: Stack@=-123456789(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 27 with following arguments:
# Arg1: Stack@=-123456789(double)
# Dest: LF@c()
# Executing instruction: IDEFVAR at line: 28 with following arguments:
# Dest: LF@d
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 30 with following arguments:
# Arg1: Stack@=0(double)
# Dest: LF@d()
# Executing instruction: IPUSHS at line: 31 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 32 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 33 with following arguments:
# Arg1: Stack@=74(int)
# Arg2: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 34 with following arguments:
# Arg1: Stack@=5476(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 37 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 38 with following arguments:
# Arg1: Stack@=5476(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 41 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 42 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 43 with following arguments:
# Arg1: Stack@=5477(double)
# Arg2: Stack@=55185.13(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 44 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 45 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 46 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 47 with following arguments:
# Arg1: Stack@=74(int)
# Arg2: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 48 with following arguments:
# Arg1: Stack@=5476(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 50 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 51 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 52 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 53 with following arguments:
# Arg1: Stack@=5476(double)
# Arg2: Stack@=55185.13(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 54 with following arguments:
# Arg1: LF@c=-123456789(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 55 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 56 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 57 with following arguments:
# Arg1: Stack@=-123456789(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 58 with following arguments:
# Arg1: Stack@=60661.13(double)
# Arg2: Stack@=-864197523(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 59 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 60 with following arguments:
# Arg1: Const@=5(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 61 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 62 with following arguments:
# Arg1: Stack@=10(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 63 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 64 with following arguments:
# Arg1: Stack@=10(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 65 with following arguments:
# Arg1: Stack@=-864136861.87(double)
# Arg2: Stack@=7457.45(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 66 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=-864129404.42(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 67 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 68 with following arguments:
# Arg1: Const@=78(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 69 with following arguments:
# Arg1: Stack@=78(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 70 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=78(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 71 with following arguments:
# Arg1: Const@=96(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 72 with following arguments:
# Arg1: Stack@=96(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 73 with following arguments:
# Arg1: Stack@=58168.11(double)
# Arg2: Stack@=96(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 74 with following arguments:
# Arg1: Stack@=-644420182699.1929(double)
# Arg2: Stack@=5584138.560000001(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 75 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 76 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 77 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 78 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 79 with following arguments:
# Arg1: Stack@=-644425766837.7529(double)
# Arg2: Stack@=55185.13(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 80 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 81 with following arguments:
# Arg1: LF@c=-123456789(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 82 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=-123456789(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 83 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 84 with following arguments:
# Arg1: Stack@=-123456043.255(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 85 with following arguments:
# Arg1: LF@c=-123456789(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 86 with following arguments:
# Arg1: Stack@=-123455297.51(double)
# Arg2: Stack@=-123456789(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 87 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 88 with following arguments:
# Arg1: Stack@=-246912086.51(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 89 with following arguments:
# Arg1: LF@c=-123456789(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 90 with following arguments:
# Arg1: Stack@=-246911340.765(double)
# Arg2: Stack@=-123456789(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 91 with following arguments:
# Arg1: Stack@=-644425822022.8829(double)
# Arg2: Stack@=-370368129.765(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 92 with following arguments:
# Arg1: LF@c=-123456789(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 93 with following arguments:
# Arg1: Stack@=-644796190152.6479(double)
# Arg2: Stack@=-123456789(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 94 with following arguments:
# Arg1: Stack@=-49708.13(double)
# Arg2: Stack@=5222.849187764376(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 95 with following arguments:
# Arg1: Stack@=-44485.28081223562(double)
# Dest: LF@c=-123456789(double)
# Executing instruction: IPUSHS at line: 96 with following arguments:
# Arg1: LF@c=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 97 with following arguments:
# Arg1: Stack@=-44485.28081223562(double)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 98 with following arguments:
# Arg1: LF@*tmp=-44485.28081223562(double)
# Executing instruction: IDEFVAR at line: 99 with following arguments:
# Dest: LF@*baaaaa
# Executing instruction: IMOVE at line: 100 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*baaaaa()
# Executing instruction: ICONCAT at line: 101 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Arg2: Const@=
# (string)
# Dest: LF@*baaaaa=(string)
# Executing instruction: IPUSHS at line: 102 with following arguments:
# Arg1: LF@*baaaaa=
# (string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 103 with following arguments:
# Arg1: Stack@=
# (string)
# Dest: LF@*tmp=-44485.28081223562(double)
# Executing instruction: IWRITE at line: 104 with following arguments:
# Arg1: LF@*tmp=
# (string)
# Executing instruction: IPUSHS at line: 105 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 106 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 107 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 108 with following arguments:
# Arg1: LF@c=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 109 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 110 with following arguments:
# Arg1: Stack@=74(double)
# Arg2: Stack@=-0.01676385955947217(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 111 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 112 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 113 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 114 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 115 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 116 with following arguments:
# Arg1: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 117 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 118 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 119 with following arguments:
# Arg1: Const@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 120 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 121 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 122 with following arguments:
# Arg1: Stack@=-70(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 123 with following arguments:
# Arg1: Const@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 124 with following arguments:
# Arg1: Const@=9(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 125 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=9(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 126 with following arguments:
# Arg1: Stack@=72(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 127 with following arguments:
# Arg1: LF@c=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 128 with following arguments:
# Arg1: Const@=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 129 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 130 with following arguments:
# Arg1: Stack@=-44485.28081223562(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 131 with following arguments:
# Arg1: LF@c=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 132 with following arguments:
# Arg1: Stack@=-3291910.780105436(double)
# Arg2: Stack@=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 133 with following arguments:
# Arg1: LF@c=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 134 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 135 with following arguments:
# Arg1: Const@=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 136 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 137 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=8(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 138 with following arguments:
# Arg1: Const@=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 139 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 140 with following arguments:
# Arg1: Stack@=5965.96(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 141 with following arguments:
# Arg1: Stack@=-44485.28081223562(double)
# Arg2: Stack@=5969.96(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 142 with following arguments:
# Arg1: Stack@=-3247425.499293201(double)
# Arg2: Stack@=-265575347.0378142(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 143 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 144 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 145 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 146 with following arguments:
# Arg1: Stack@=745.745(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 147 with following arguments:
# Arg1: LF@c=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 148 with following arguments:
# Arg1: Stack@=55185.13(double)
# Arg2: Stack@=-44485.28081223562(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 149 with following arguments:
# Arg1: Stack@=-268822772.5371073(double)
# Arg2: Stack@=-1.240525607400941(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 150 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 151 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 152 with following arguments:
# Arg1: Stack@=-268822773.777633(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 153 with following arguments:
# Arg1: Stack@=72(double)
# Arg2: Stack@=-268822766.777633(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 154 with following arguments:
# Arg1: Stack@=-70(double)
# Arg2: Stack@=-2.678344578588374e-07(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 155 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 156 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 157 with following arguments:
# Arg1: Stack@=-70.00000026783445(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 158 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 159 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 160 with following arguments:
# Arg1: Stack@=-144.0000002678345(double)
# Arg2: Stack@=7(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 161 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=-137.0000002678345(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 162 with following arguments:
# Arg1: LF@a=74(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 163 with following arguments:
# Arg1: Stack@=74(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 164 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 165 with following arguments:
# Arg1: Stack@=74(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 166 with following arguments:
# Arg1: LF@b=745.745(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 167 with following arguments:
# Arg1: Stack@=55185.13(double)
# Arg2: Stack@=745.745(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 168 with following arguments:
# Arg1: Stack@=-274.0000005356689(double)
# Arg2: Stack@=74(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 169 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=-348.0000005356689(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 170 with following arguments:
# Arg1: Stack@=752.745(double)
# Arg2: Stack@=-0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 171 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 172 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 173 with following arguments:
# Arg1: Stack@=752.745(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 174 with following arguments:
# Arg1: Const@=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 175 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 176 with following arguments:
# Arg1: Stack@=753.745(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 177 with following arguments:
# Arg1: Stack@=73.98323614044052(double)
# Arg2: Stack@=188.43625(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 178 with following arguments:
# Arg1: Stack@=-114.4530138595595(double)
# Dest: LF@d=0(double)
# Executing instruction: IPUSHS at line: 179 with following arguments:
# Arg1: LF@d=-114.4530138595595(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 180 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 181 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 182 with following arguments:
# Arg1: LF@d=-114.4530138595595(double)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 183 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=-114.4530138595595(double)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 184 with following arguments:
# Arg1: Stack@=-114.4530138595595(double)
# Arg2: Stack@=-228.906027719119(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 185 with following arguments:
# Arg1: Stack@=114.4530138595595(double)
# Dest: LF@d=-114.4530138595595(double)
# Executing instruction: IPUSHS at line: 186 with following arguments:
# Arg1: LF@d=114.4530138595595(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 187 with following arguments:
# Arg1: Stack@=114.4530138595595(double)
# Dest: LF@*tmp=
# (string)
# Executing instruction: IWRITE at line: 188 with following arguments:
# Arg1: LF@*tmp=114.4530138595595(double)
# Executing instruction: IJUMP at line: 189 with following arguments:
# Executing instruction: ILABEL at line: 190 with following arguments:
# Executing instruction: IGROOT at line: 192 with following arguments:
# I am Groot at 192 (1222).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 1222 (312+910)
# GROOT: 1222
# 
#   1: ' complex expression
#   2: 
#   3: scope
#   4: 	dim a as integer = 74
#   5: 	dim b as double = 745.745
#   6: 	dim c as double = 0-123456789
#   7: 	
#   8: 	dim d as double
#   9: 
#  10: 	c = (a * a) + b / b - b * a + (b * (a * a + b * a + c * 7 + 2 * 5 * b) - b * 78 * 96 - b * a + (b + c + b + c + b + c)) / c
#  11: 	print c;
#  12: 	print !"\n";
#  13: 	d = a + (b / c) - (7 + b - 0 / (2 * (4 - a + 8 * 9 / (c * 74 - c + c * (b * 8 + 4) + b * a / c + 7) - a + 7) - a * b / b) + 1)/4
#  14: 	d = d - 2 * d
#  15: 	print d;
#  16: end scope

########################################

# Generated code                                                                #     2/190
# IFJ                                                                           #     3/190
# xbenes49 xbolsh00 xpolan09                                                    #     4/190
# 2017                                                                          #     5/190
.IFJcode17                                                                      #     7/190
CREATEFRAME                                                                     #     8/190
PUSHFRAME                                                                       #     9/190
DEFVAR LF@*tmp                                                                  #    10/190
DEFVAR LF@*foo                                                                  #    11/190
DEFVAR LF@*bar                                                                  #    12/190
JUMP $main                                                                      #    13/190
LABEL $main                                                                     #    15/190
DEFVAR LF@a                                                                     #    16/190
PUSHS int@74                                                                    #    17/190
POPS LF@a                                                                       #    18/190
DEFVAR LF@b                                                                     #    19/190
PUSHS float@745.745                                                             #    20/190
POPS LF@b                                                                       #    21/190
DEFVAR LF@c                                                                     #    22/190
PUSHS int@0                                                                     #    23/190
PUSHS int@123456789                                                             #    24/190
SUBS                                                                            #    25/190
INT2FLOATS                                                                      #    26/190
POPS LF@c                                                                       #    27/190
DEFVAR LF@d                                                                     #    28/190
PUSHS float@0                                                                   #    29/190
POPS LF@d                                                                       #    30/190
PUSHS LF@a                                                                      #    31/190
PUSHS LF@a                                                                      #    32/190
MULS                                                                            #    33/190
INT2FLOATS                                                                      #    34/190
PUSHS LF@b                                                                      #    35/190
PUSHS LF@b                                                                      #    36/190
DIVS                                                                            #    37/190
ADDS                                                                            #    38/190
PUSHS LF@b                                                                      #    39/190
PUSHS LF@a                                                                      #    40/190
INT2FLOATS                                                                      #    41/190
MULS                                                                            #    42/190
SUBS                                                                            #    43/190
PUSHS LF@b                                                                      #    44/190
PUSHS LF@a                                                                      #    45/190
PUSHS LF@a                                                                      #    46/190
MULS                                                                            #    47/190
INT2FLOATS                                                                      #    48/190
PUSHS LF@b                                                                      #    49/190
PUSHS LF@a                                                                      #    50/190
INT2FLOATS                                                                      #    51/190
MULS                                                                            #    52/190
ADDS                                                                            #    53/190
PUSHS LF@c                                                                      #    54/190
PUSHS int@7                                                                     #    55/190
INT2FLOATS                                                                      #    56/190
MULS                                                                            #    57/190
ADDS                                                                            #    58/190
PUSHS int@2                                                                     #    59/190
PUSHS int@5                                                                     #    60/190
MULS                                                                            #    61/190
INT2FLOATS                                                                      #    62/190
PUSHS LF@b                                                                      #    63/190
MULS                                                                            #    64/190
ADDS                                                                            #    65/190
MULS                                                                            #    66/190
PUSHS LF@b                                                                      #    67/190
PUSHS int@78                                                                    #    68/190
INT2FLOATS                                                                      #    69/190
MULS                                                                            #    70/190
PUSHS int@96                                                                    #    71/190
INT2FLOATS                                                                      #    72/190
MULS                                                                            #    73/190
SUBS                                                                            #    74/190
PUSHS LF@b                                                                      #    75/190
PUSHS LF@a                                                                      #    76/190
INT2FLOATS                                                                      #    77/190
MULS                                                                            #    78/190
SUBS                                                                            #    79/190
PUSHS LF@b                                                                      #    80/190
PUSHS LF@c                                                                      #    81/190
ADDS                                                                            #    82/190
PUSHS LF@b                                                                      #    83/190
ADDS                                                                            #    84/190
PUSHS LF@c                                                                      #    85/190
ADDS                                                                            #    86/190
PUSHS LF@b                                                                      #    87/190
ADDS                                                                            #    88/190
PUSHS LF@c                                                                      #    89/190
ADDS                                                                            #    90/190
ADDS                                                                            #    91/190
PUSHS LF@c                                                                      #    92/190
DIVS                                                                            #    93/190
ADDS                                                                            #    94/190
POPS LF@c                                                                       #    95/190
PUSHS LF@c                                                                      #    96/190
POPS LF@*tmp                                                                    #    97/190
WRITE LF@*tmp                                                                   #    98/190
DEFVAR LF@*baaaaa                                                               #    99/190
MOVE LF@*baaaaa string@                                                         #   100/190
CONCAT LF@*baaaaa LF@*baaaaa string@\010                                        #   101/190
PUSHS LF@*baaaaa                                                                #   102/190
POPS LF@*tmp                                                                    #   103/190
WRITE LF@*tmp                                                                   #   104/190
PUSHS LF@a                                                                      #   105/190
INT2FLOATS                                                                      #   106/190
PUSHS LF@b                                                                      #   107/190
PUSHS LF@c                                                                      #   108/190
DIVS                                                                            #   109/190
ADDS                                                                            #   110/190
PUSHS int@7                                                                     #   111/190
INT2FLOATS                                                                      #   112/190
PUSHS LF@b                                                                      #   113/190
ADDS                                                                            #   114/190
PUSHS int@0                                                                     #   115/190
INT2FLOATS                                                                      #   116/190
PUSHS int@2                                                                     #   117/190
INT2FLOATS                                                                      #   118/190
PUSHS int@4                                                                     #   119/190
PUSHS LF@a                                                                      #   120/190
SUBS                                                                            #   121/190
INT2FLOATS                                                                      #   122/190
PUSHS int@8                                                                     #   123/190
PUSHS int@9                                                                     #   124/190
MULS                                                                            #   125/190
INT2FLOATS                                                                      #   126/190
PUSHS LF@c                                                                      #   127/190
PUSHS int@74                                                                    #   128/190
INT2FLOATS                                                                      #   129/190
MULS                                                                            #   130/190
PUSHS LF@c                                                                      #   131/190
SUBS                                                                            #   132/190
PUSHS LF@c                                                                      #   133/190
PUSHS LF@b                                                                      #   134/190
PUSHS int@8                                                                     #   135/190
INT2FLOATS                                                                      #   136/190
MULS                                                                            #   137/190
PUSHS int@4                                                                     #   138/190
INT2FLOATS                                                                      #   139/190
ADDS                                                                            #   140/190
MULS                                                                            #   141/190
ADDS                                                                            #   142/190
PUSHS LF@b                                                                      #   143/190
PUSHS LF@a                                                                      #   144/190
INT2FLOATS                                                                      #   145/190
MULS                                                                            #   146/190
PUSHS LF@c                                                                      #   147/190
DIVS                                                                            #   148/190
ADDS                                                                            #   149/190
PUSHS int@7                                                                     #   150/190
INT2FLOATS                                                                      #   151/190
ADDS                                                                            #   152/190
DIVS                                                                            #   153/190
ADDS                                                                            #   154/190
PUSHS LF@a                                                                      #   155/190
INT2FLOATS                                                                      #   156/190
SUBS                                                                            #   157/190
PUSHS int@7                                                                     #   158/190
INT2FLOATS                                                                      #   159/190
ADDS                                                                            #   160/190
MULS                                                                            #   161/190
PUSHS LF@a                                                                      #   162/190
INT2FLOATS                                                                      #   163/190
PUSHS LF@b                                                                      #   164/190
MULS                                                                            #   165/190
PUSHS LF@b                                                                      #   166/190
DIVS                                                                            #   167/190
SUBS                                                                            #   168/190
DIVS                                                                            #   169/190
SUBS                                                                            #   170/190
PUSHS int@1                                                                     #   171/190
INT2FLOATS                                                                      #   172/190
ADDS                                                                            #   173/190
PUSHS int@4                                                                     #   174/190
INT2FLOATS                                                                      #   175/190
DIVS                                                                            #   176/190
SUBS                                                                            #   177/190
POPS LF@d                                                                       #   178/190
PUSHS LF@d                                                                      #   179/190
PUSHS int@2                                                                     #   180/190
INT2FLOATS                                                                      #   181/190
PUSHS LF@d                                                                      #   182/190
MULS                                                                            #   183/190
SUBS                                                                            #   184/190
POPS LF@d                                                                       #   185/190
PUSHS LF@d                                                                      #   186/190
POPS LF@*tmp                                                                    #   187/190
WRITE LF@*tmp                                                                   #   188/190
JUMP $end                                                                       #   189/190
LABEL $end                                                                      #   190/190

