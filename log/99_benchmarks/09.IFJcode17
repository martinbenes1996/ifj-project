# 2017-12-04 00:15:04.279484
# SECTION: 99_benchmarks
# TEST: 09
# INFO: multiple string concatenations
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@buffer
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: LF@*baaaaa
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*baaaaa()
# Executing instruction: ICONCAT at line: 19 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Arg2: Const@=(string)
# Dest: LF@*baaaaa=(string)
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: LF@*baaaaa=(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 21 with following arguments:
# Arg1: Stack@=(string)
# Dest: LF@buffer()
# Executing instruction: IDEFVAR at line: 22 with following arguments:
# Dest: LF@count
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=42(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 24 with following arguments:
# Arg1: Stack@=42(int)
# Dest: LF@count()
# Executing instruction: ILABEL at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: LF@count=42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 28 with following arguments:
# Arg1: Stack@=42(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 30 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IDEFVAR at line: 31 with following arguments:
# Dest: LF@*caaaaa
# Executing instruction: IMOVE at line: 32 with following arguments:
# Arg1: Const@=(string)
# Dest: LF@*caaaaa()
# Executing instruction: ICONCAT at line: 33 with following arguments:
# Arg1: LF@*caaaaa=(string)
# Arg2: Const@=(string)
# Dest: LF@*caaaaa=(string)
# Executing instruction: ICONCAT at line: 34 with following arguments:
# Arg1: LF@*caaaaa=(string)
# Arg2: LF@buffer=(string)
# Dest: LF@*caaaaa=(string)
# Executing instruction: ICONCAT at line: 35 with following arguments:
# Arg1: LF@*caaaaa=(string)
# Arg2: Const@= barman(string)
# Dest: LF@*caaaaa=(string)
# Executing instruction: ICONCAT at line: 36 with following arguments:
# Arg1: LF@*caaaaa= barman(string)
# Arg2: Const@=(string)
# Dest: LF@*caaaaa= barman(string)
# Executing instruction: IPUSHS at line: 37 with following arguments:
# Arg1: LF@*caaaaa= barman(string)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@= barman(string)
# Dest: LF@buffer=(string)
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: LF@count=42(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 41 with following arguments:
# Arg1: Stack@=42(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 42 with following arguments:
# Arg1: Stack@=41(int)
# Dest: LF@count=42(int)
# Executing instruction: IJUMP at line: 43 with following arguments:
# Executing instruction: ILABEL at line: 25 with following arguments:
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: LF@count=41(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IGTS at line: 28 with following arguments:
# Arg1: Stack@=41(int)
# Arg2: Stack@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 30 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IDEFVAR at line: 31 with following arguments:
# Dest: LF@*caaaaa
# Error at line: 31
# Symbol already exists!
# 
# EXPECTED INTERPRETER STDOUT:

#  barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman barman


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 52
# PRICE: ---
# GROOT: ---
# 
#   1: ' multiple string concatenations
#   2: scope
#   3: 	dim buffer as string
#   4: 	dim count as integer = 42
#   5: 	do while count > 0
#   6:         buffer = !"" + buffer + !" barman" + !"" ' for price and optimalization
#   7:         count = count - 1
#   8: 	loop
#   9: 	print buffer;
#  10: end scope

########################################

# Generated code                                                                #     2/52
# IFJ                                                                           #     3/52
# xbenes49 xbolsh00 xpolan09                                                    #     4/52
# 2017                                                                          #     5/52
.IFJcode17                                                                      #     7/52
CREATEFRAME                                                                     #     8/52
PUSHFRAME                                                                       #     9/52
DEFVAR LF@*tmp                                                                  #    10/52
DEFVAR LF@*foo                                                                  #    11/52
DEFVAR LF@*bar                                                                  #    12/52
JUMP $main                                                                      #    13/52
LABEL $main                                                                     #    15/52
DEFVAR LF@buffer                                                                #    16/52
DEFVAR LF@*baaaaa                                                               #    17/52
MOVE LF@*baaaaa string@                                                         #    18/52
CONCAT LF@*baaaaa LF@*baaaaa string@                                            #    19/52
PUSHS LF@*baaaaa                                                                #    20/52
POPS LF@buffer                                                                  #    21/52
DEFVAR LF@count                                                                 #    22/52
PUSHS int@42                                                                    #    23/52
POPS LF@count                                                                   #    24/52
LABEL $aaaaaa                                                                   #    25/52
PUSHS LF@count                                                                  #    26/52
PUSHS int@0                                                                     #    27/52
GTS                                                                             #    28/52
PUSHS bool@true                                                                 #    29/52
JUMPIFNEQS $baaaaa                                                              #    30/52
DEFVAR LF@*caaaaa                                                               #    31/52
MOVE LF@*caaaaa string@                                                         #    32/52
CONCAT LF@*caaaaa LF@*caaaaa string@                                            #    33/52
CONCAT LF@*caaaaa LF@*caaaaa LF@buffer                                          #    34/52
CONCAT LF@*caaaaa LF@*caaaaa string@\032barman                                  #    35/52
CONCAT LF@*caaaaa LF@*caaaaa string@                                            #    36/52
PUSHS LF@*caaaaa                                                                #    37/52
POPS LF@buffer                                                                  #    38/52
PUSHS LF@count                                                                  #    39/52
PUSHS int@1                                                                     #    40/52
SUBS                                                                            #    41/52
POPS LF@count                                                                   #    42/52
JUMP $aaaaaa                                                                    #    43/52
LABEL $baaaaa                                                                   #    44/52
DEFVAR LF@*daaaaa                                                               #    45/52
MOVE LF@*daaaaa string@                                                         #    46/52
CONCAT LF@*daaaaa LF@*daaaaa LF@buffer                                          #    47/52
PUSHS LF@*daaaaa                                                                #    48/52
POPS LF@*tmp                                                                    #    49/52
WRITE LF@*tmp                                                                   #    50/52
JUMP $end                                                                       #    51/52
LABEL $end                                                                      #    52/52

