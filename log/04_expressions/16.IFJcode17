# 2017-12-04 00:15:00.226981
# SECTION: 04_expressions
# TEST: 16
# INFO: exp(x) 6 iteration with loop
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@vysledek
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=0(double)
# Dest: LF@vysledek()
# Executing instruction: IDEFVAR at line: 19 with following arguments:
# Dest: LF@citatel
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 21 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@citatel()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 23 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@citatel=0(int)
# Executing instruction: IDEFVAR at line: 24 with following arguments:
# Dest: LF@jmenovatel
# Executing instruction: IPUSHS at line: 25 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@jmenovatel()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 28 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@jmenovatel=0(int)
# Executing instruction: IDEFVAR at line: 29 with following arguments:
# Dest: LF@pocitadlo
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 31 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@pocitadlo()
# Executing instruction: IPUSHS at line: 32 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 33 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@pocitadlo=0(int)
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@pocitadlo=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 37 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 39 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@vysledek=0(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: LF@citatel=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@jmenovatel=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 44 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 45 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 46 with following arguments:
# Arg1: Stack@=0(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 47 with following arguments:
# Arg1: Stack@=1(double)
# Dest: LF@vysledek=0(double)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@citatel=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 50 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@citatel=1(int)
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@jmenovatel=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@pocitadlo=1(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 54 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=1(int)
# Dest: LF@jmenovatel=1(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@pocitadlo=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 58 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@pocitadlo=1(int)
# Executing instruction: IJUMP at line: 60 with following arguments:
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@pocitadlo=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 37 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 39 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@vysledek=1(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: LF@citatel=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@jmenovatel=1(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 44 with following arguments:
# Arg1: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 45 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=1(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 46 with following arguments:
# Arg1: Stack@=1(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 47 with following arguments:
# Arg1: Stack@=3(double)
# Dest: LF@vysledek=1(double)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@citatel=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 50 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@citatel=2(int)
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@jmenovatel=1(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@pocitadlo=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 54 with following arguments:
# Arg1: Stack@=1(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=2(int)
# Dest: LF@jmenovatel=1(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@pocitadlo=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 58 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=3(int)
# Dest: LF@pocitadlo=2(int)
# Executing instruction: IJUMP at line: 60 with following arguments:
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@pocitadlo=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 37 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 39 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@vysledek=3(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: LF@citatel=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@jmenovatel=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 44 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 45 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 46 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 47 with following arguments:
# Arg1: Stack@=5(double)
# Dest: LF@vysledek=3(double)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@citatel=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 50 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=8(int)
# Dest: LF@citatel=4(int)
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@jmenovatel=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@pocitadlo=3(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 54 with following arguments:
# Arg1: Stack@=2(int)
# Arg2: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@jmenovatel=2(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@pocitadlo=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 58 with following arguments:
# Arg1: Stack@=3(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=4(int)
# Dest: LF@pocitadlo=3(int)
# Executing instruction: IJUMP at line: 60 with following arguments:
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@pocitadlo=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 37 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 39 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@vysledek=5(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: LF@citatel=8(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@jmenovatel=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 44 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 45 with following arguments:
# Arg1: Stack@=8(double)
# Arg2: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 46 with following arguments:
# Arg1: Stack@=5(double)
# Arg2: Stack@=1.333333333333333(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 47 with following arguments:
# Arg1: Stack@=6.333333333333333(double)
# Dest: LF@vysledek=5(double)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@citatel=8(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 50 with following arguments:
# Arg1: Stack@=8(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=16(int)
# Dest: LF@citatel=8(int)
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@jmenovatel=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@pocitadlo=4(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 54 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=24(int)
# Dest: LF@jmenovatel=6(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@pocitadlo=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 58 with following arguments:
# Arg1: Stack@=4(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=5(int)
# Dest: LF@pocitadlo=4(int)
# Executing instruction: IJUMP at line: 60 with following arguments:
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@pocitadlo=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 37 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 39 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@vysledek=6.333333333333333(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: LF@citatel=16(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=16(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@jmenovatel=24(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 44 with following arguments:
# Arg1: Stack@=24(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 45 with following arguments:
# Arg1: Stack@=16(double)
# Arg2: Stack@=24(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 46 with following arguments:
# Arg1: Stack@=6.333333333333333(double)
# Arg2: Stack@=0.6666666666666666(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 47 with following arguments:
# Arg1: Stack@=7(double)
# Dest: LF@vysledek=6.333333333333333(double)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@citatel=16(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 50 with following arguments:
# Arg1: Stack@=16(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=32(int)
# Dest: LF@citatel=16(int)
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@jmenovatel=24(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@pocitadlo=5(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 54 with following arguments:
# Arg1: Stack@=24(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=120(int)
# Dest: LF@jmenovatel=24(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@pocitadlo=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 58 with following arguments:
# Arg1: Stack@=5(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=6(int)
# Dest: LF@pocitadlo=5(int)
# Executing instruction: IJUMP at line: 60 with following arguments:
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@pocitadlo=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 37 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 39 with following arguments:
# Arg1: Stack@=true(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: IPUSHS at line: 40 with following arguments:
# Arg1: LF@vysledek=7(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 41 with following arguments:
# Arg1: LF@citatel=32(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 42 with following arguments:
# Arg1: Stack@=32(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@jmenovatel=120(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 44 with following arguments:
# Arg1: Stack@=120(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 45 with following arguments:
# Arg1: Stack@=32(double)
# Arg2: Stack@=120(double)
# Dest: Stack@()
# Executing instruction: IADDS at line: 46 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=0.2666666666666667(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 47 with following arguments:
# Arg1: Stack@=7.266666666666667(double)
# Dest: LF@vysledek=7(double)
# Executing instruction: IPUSHS at line: 48 with following arguments:
# Arg1: LF@citatel=32(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 49 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 50 with following arguments:
# Arg1: Stack@=32(int)
# Arg2: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 51 with following arguments:
# Arg1: Stack@=64(int)
# Dest: LF@citatel=32(int)
# Executing instruction: IPUSHS at line: 52 with following arguments:
# Arg1: LF@jmenovatel=120(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 53 with following arguments:
# Arg1: LF@pocitadlo=6(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 54 with following arguments:
# Arg1: Stack@=120(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 55 with following arguments:
# Arg1: Stack@=720(int)
# Dest: LF@jmenovatel=120(int)
# Executing instruction: IPUSHS at line: 56 with following arguments:
# Arg1: LF@pocitadlo=6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 57 with following arguments:
# Arg1: Const@=1(int)
# Dest: Stack@()
# Executing instruction: IADDS at line: 58 with following arguments:
# Arg1: Stack@=6(int)
# Arg2: Stack@=1(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 59 with following arguments:
# Arg1: Stack@=7(int)
# Dest: LF@pocitadlo=6(int)
# Executing instruction: IJUMP at line: 60 with following arguments:
# Executing instruction: ILABEL at line: 34 with following arguments:
# Executing instruction: IPUSHS at line: 35 with following arguments:
# Arg1: LF@pocitadlo=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: ILSS at line: 37 with following arguments:
# Arg1: Stack@=7(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 38 with following arguments:
# Arg1: Const@=true(bool)
# Dest: Stack@()
# Executing instruction: IJUMPIFNEQS at line: 39 with following arguments:
# Arg1: Stack@=false(bool)
# Arg2: Stack@=true(bool)
# Executing instruction: ILABEL at line: 61 with following arguments:
# Executing instruction: IPUSHS at line: 62 with following arguments:
# Arg1: LF@vysledek=7.266666666666667(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 63 with following arguments:
# Arg1: Stack@=7.266666666666667(double)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 64 with following arguments:
# Arg1: LF@*tmp=7.266666666666667(double)
# Executing instruction: IJUMP at line: 65 with following arguments:
# Executing instruction: ILABEL at line: 66 with following arguments:
# Executing instruction: IGROOT at line: 68 with following arguments:
# I am Groot at 68 (1197).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 1197 (276+921)
# GROOT: 1197
# 
#   1: ' exp(x) 6 iteration with loop
#   2: 
#   3: SCOPE
#   4: 
#   5: 	dim vysledek as double
#   6: 	dim citatel as integer
#   7: 	citatel = 1
#   8: 	dim jmenovatel as integer
#   9: 	jmenovatel = 1
#  10: 
#  11: 	dim pocitadlo as integer
#  12: 	pocitadlo = 1
#  13: 
#  14: 	do while pocitadlo < 7
#  15: 
#  16: 		vysledek = vysledek + citatel / jmenovatel
#  17: 
#  18: 		citatel = citatel * 2
#  19: 		jmenovatel = jmenovatel * pocitadlo
#  20: 
#  21: 		pocitadlo = pocitadlo + 1
#  22: 
#  23: 	loop
#  24: 
#  25: 	print vysledek;
#  26: 
#  27: END SCOPE

########################################

# Generated code                                                                #     2/66
# IFJ                                                                           #     3/66
# xbenes49 xbolsh00 xpolan09                                                    #     4/66
# 2017                                                                          #     5/66
.IFJcode17                                                                      #     7/66
CREATEFRAME                                                                     #     8/66
PUSHFRAME                                                                       #     9/66
DEFVAR LF@*tmp                                                                  #    10/66
DEFVAR LF@*foo                                                                  #    11/66
DEFVAR LF@*bar                                                                  #    12/66
JUMP $main                                                                      #    13/66
LABEL $main                                                                     #    15/66
DEFVAR LF@vysledek                                                              #    16/66
PUSHS float@0                                                                   #    17/66
POPS LF@vysledek                                                                #    18/66
DEFVAR LF@citatel                                                               #    19/66
PUSHS int@0                                                                     #    20/66
POPS LF@citatel                                                                 #    21/66
PUSHS int@1                                                                     #    22/66
POPS LF@citatel                                                                 #    23/66
DEFVAR LF@jmenovatel                                                            #    24/66
PUSHS int@0                                                                     #    25/66
POPS LF@jmenovatel                                                              #    26/66
PUSHS int@1                                                                     #    27/66
POPS LF@jmenovatel                                                              #    28/66
DEFVAR LF@pocitadlo                                                             #    29/66
PUSHS int@0                                                                     #    30/66
POPS LF@pocitadlo                                                               #    31/66
PUSHS int@1                                                                     #    32/66
POPS LF@pocitadlo                                                               #    33/66
LABEL $aaaaaa                                                                   #    34/66
PUSHS LF@pocitadlo                                                              #    35/66
PUSHS int@7                                                                     #    36/66
LTS                                                                             #    37/66
PUSHS bool@true                                                                 #    38/66
JUMPIFNEQS $baaaaa                                                              #    39/66
PUSHS LF@vysledek                                                               #    40/66
PUSHS LF@citatel                                                                #    41/66
INT2FLOATS                                                                      #    42/66
PUSHS LF@jmenovatel                                                             #    43/66
INT2FLOATS                                                                      #    44/66
DIVS                                                                            #    45/66
ADDS                                                                            #    46/66
POPS LF@vysledek                                                                #    47/66
PUSHS LF@citatel                                                                #    48/66
PUSHS int@2                                                                     #    49/66
MULS                                                                            #    50/66
POPS LF@citatel                                                                 #    51/66
PUSHS LF@jmenovatel                                                             #    52/66
PUSHS LF@pocitadlo                                                              #    53/66
MULS                                                                            #    54/66
POPS LF@jmenovatel                                                              #    55/66
PUSHS LF@pocitadlo                                                              #    56/66
PUSHS int@1                                                                     #    57/66
ADDS                                                                            #    58/66
POPS LF@pocitadlo                                                               #    59/66
JUMP $aaaaaa                                                                    #    60/66
LABEL $baaaaa                                                                   #    61/66
PUSHS LF@vysledek                                                               #    62/66
POPS LF@*tmp                                                                    #    63/66
WRITE LF@*tmp                                                                   #    64/66
JUMP $end                                                                       #    65/66
LABEL $end                                                                      #    66/66

