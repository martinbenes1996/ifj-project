# 2017-12-04 00:15:00.448325
# SECTION: 04_expressions
# TEST: 29
# INFO: Bracket, \ and /
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 15 with following arguments:
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 17 with following arguments:
# Arg1: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 19 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 20 with following arguments:
# Arg1: Stack@=7(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 21 with following arguments:
# Arg1: Stack@=1.75(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 22 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=2(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 24 with following arguments:
# Arg1: Stack@=2(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 25 with following arguments:
# Arg1: Stack@=2(double)
# Arg2: Stack@=2(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 26 with following arguments:
# Arg1: Stack@=1(double)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 27 with following arguments:
# Arg1: LF@*tmp=1(double)
# Executing instruction: IJUMP at line: 28 with following arguments:
# Executing instruction: ILABEL at line: 29 with following arguments:
# Executing instruction: IGROOT at line: 31 with following arguments:
# I am Groot at 31 (93).
# 
# STDOUT DIFF:
# --- expected
# +++ actual
# @@ -1 +1 @@

# - 0.5
# + 1

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: ---
# GROOT: 93
# 
#   1: ' Bracket, \ and /
#   2: scope
#   3:     print (7\4)/2;
#   4: end scope

########################################

# Generated code                                                                #     2/29
# IFJ                                                                           #     3/29
# xbenes49 xbolsh00 xpolan09                                                    #     4/29
# 2017                                                                          #     5/29
.IFJcode17                                                                      #     7/29
CREATEFRAME                                                                     #     8/29
PUSHFRAME                                                                       #     9/29
DEFVAR LF@*tmp                                                                  #    10/29
DEFVAR LF@*foo                                                                  #    11/29
DEFVAR LF@*bar                                                                  #    12/29
JUMP $main                                                                      #    13/29
LABEL $main                                                                     #    15/29
PUSHS int@7                                                                     #    16/29
INT2FLOATS                                                                      #    17/29
PUSHS int@4                                                                     #    18/29
INT2FLOATS                                                                      #    19/29
DIVS                                                                            #    20/29
FLOAT2R2EINTS                                                                   #    21/29
INT2FLOATS                                                                      #    22/29
PUSHS int@2                                                                     #    23/29
INT2FLOATS                                                                      #    24/29
DIVS                                                                            #    25/29
POPS LF@*tmp                                                                    #    26/29
WRITE LF@*tmp                                                                   #    27/29
JUMP $end                                                                       #    28/29
LABEL $end                                                                      #    29/29

