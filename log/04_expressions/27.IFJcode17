# 2017-12-04 00:15:00.424859
# SECTION: 04_expressions
# TEST: 27
# INFO: Divide priority (fail types)
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 15 with following arguments:
# Executing instruction: IPUSHS at line: 16 with following arguments:
# Arg1: Const@=100000(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 17 with following arguments:
# Arg1: Stack@=100000(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 18 with following arguments:
# Arg1: Const@=3(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 19 with following arguments:
# Arg1: Stack@=3(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 21 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 22 with following arguments:
# Arg1: Stack@=3(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 23 with following arguments:
# Arg1: Stack@=100000(double)
# Arg2: Stack@=0.75(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 24 with following arguments:
# Arg1: Stack@=133333.3333333333(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 25 with following arguments:
# Arg1: Stack@=133333(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: Const@=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 27 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 28 with following arguments:
# Arg1: Stack@=133333(double)
# Arg2: Stack@=4(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 29 with following arguments:
# Arg1: Stack@=33333.25(double)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 30 with following arguments:
# Arg1: Stack@=33333(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 31 with following arguments:
# Arg1: Const@=4(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 32 with following arguments:
# Arg1: Stack@=4(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: Const@=6(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 34 with following arguments:
# Arg1: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 35 with following arguments:
# Arg1: Stack@=4(double)
# Arg2: Stack@=6(double)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 36 with following arguments:
# Arg1: Stack@=33333(double)
# Arg2: Stack@=0.6666666666666666(double)
# Dest: Stack@()
# Executing instruction: IFLOAT2R2EINTS at line: 37 with following arguments:
# Arg1: Stack@=49999.5(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 38 with following arguments:
# Arg1: Stack@=50000(int)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 39 with following arguments:
# Arg1: LF@*tmp=50000(int)
# Executing instruction: IJUMP at line: 40 with following arguments:
# Executing instruction: ILABEL at line: 41 with following arguments:
# Executing instruction: IGROOT at line: 43 with following arguments:
# I am Groot at 43 (162).
# 
# STDOUT DIFF:
# --- expected
# +++ actual
# @@ -1 +1 @@

# - 25000
# + 50000

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: ---
# GROOT: 162
# 
#   1: ' Divide priority (fail types)
#   2: scope
#   3:     print 100000\(3/4)\4\(4/6);
#   4: end scope

########################################

# Generated code                                                                #     2/41
# IFJ                                                                           #     3/41
# xbenes49 xbolsh00 xpolan09                                                    #     4/41
# 2017                                                                          #     5/41
.IFJcode17                                                                      #     7/41
CREATEFRAME                                                                     #     8/41
PUSHFRAME                                                                       #     9/41
DEFVAR LF@*tmp                                                                  #    10/41
DEFVAR LF@*foo                                                                  #    11/41
DEFVAR LF@*bar                                                                  #    12/41
JUMP $main                                                                      #    13/41
LABEL $main                                                                     #    15/41
PUSHS int@100000                                                                #    16/41
INT2FLOATS                                                                      #    17/41
PUSHS int@3                                                                     #    18/41
INT2FLOATS                                                                      #    19/41
PUSHS int@4                                                                     #    20/41
INT2FLOATS                                                                      #    21/41
DIVS                                                                            #    22/41
DIVS                                                                            #    23/41
FLOAT2R2EINTS                                                                   #    24/41
INT2FLOATS                                                                      #    25/41
PUSHS int@4                                                                     #    26/41
INT2FLOATS                                                                      #    27/41
DIVS                                                                            #    28/41
FLOAT2R2EINTS                                                                   #    29/41
INT2FLOATS                                                                      #    30/41
PUSHS int@4                                                                     #    31/41
INT2FLOATS                                                                      #    32/41
PUSHS int@6                                                                     #    33/41
INT2FLOATS                                                                      #    34/41
DIVS                                                                            #    35/41
DIVS                                                                            #    36/41
FLOAT2R2EINTS                                                                   #    37/41
POPS LF@*tmp                                                                    #    38/41
WRITE LF@*tmp                                                                   #    39/41
JUMP $end                                                                       #    40/41
LABEL $end                                                                      #    41/41

