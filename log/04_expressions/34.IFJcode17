# 2017-12-04 00:15:00.538989
# SECTION: 04_expressions
# TEST: 34
# INFO: Random math expression with -
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=0(double)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 19 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 20 with following arguments:
# Arg1: Const@=5(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 21 with following arguments:
# Arg1: Stack@=0(int)
# Arg2: Stack@=5(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 23 with following arguments:
# Arg1: Const@=6(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 24 with following arguments:
# Arg1: Stack@=0(int)
# Arg2: Stack@=6(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 25 with following arguments:
# Arg1: Stack@=-5(int)
# Arg2: Stack@=-6(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=7(int)
# Dest: Stack@()
# Executing instruction: ISUBS at line: 28 with following arguments:
# Arg1: Stack@=0(int)
# Arg2: Stack@=7(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 29 with following arguments:
# Arg1: Stack@=30(int)
# Arg2: Stack@=-7(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 30 with following arguments:
# Arg1: Stack@=-210(int)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 31 with following arguments:
# Arg1: LF@*tmp=-210(int)
# Executing instruction: IJUMP at line: 32 with following arguments:
# Executing instruction: ILABEL at line: 33 with following arguments:
# Executing instruction: IGROOT at line: 35 with following arguments:
# I am Groot at 35 (123).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 123 (40+83)
# GROOT: 123
# 
#   1: ' Random math expression with -
#   2: 
#   3: scope
#   4:     dim a as double
#   5:     print ((0-5)*(0-6))*(0-7);
#   6: 
#   7: end scope

########################################

# Generated code                                                                #     2/33
# IFJ                                                                           #     3/33
# xbenes49 xbolsh00 xpolan09                                                    #     4/33
# 2017                                                                          #     5/33
.IFJcode17                                                                      #     7/33
CREATEFRAME                                                                     #     8/33
PUSHFRAME                                                                       #     9/33
DEFVAR LF@*tmp                                                                  #    10/33
DEFVAR LF@*foo                                                                  #    11/33
DEFVAR LF@*bar                                                                  #    12/33
JUMP $main                                                                      #    13/33
LABEL $main                                                                     #    15/33
DEFVAR LF@a                                                                     #    16/33
PUSHS float@0                                                                   #    17/33
POPS LF@a                                                                       #    18/33
PUSHS int@0                                                                     #    19/33
PUSHS int@5                                                                     #    20/33
SUBS                                                                            #    21/33
PUSHS int@0                                                                     #    22/33
PUSHS int@6                                                                     #    23/33
SUBS                                                                            #    24/33
MULS                                                                            #    25/33
PUSHS int@0                                                                     #    26/33
PUSHS int@7                                                                     #    27/33
SUBS                                                                            #    28/33
MULS                                                                            #    29/33
POPS LF@*tmp                                                                    #    30/33
WRITE LF@*tmp                                                                   #    31/33
JUMP $end                                                                       #    32/33
LABEL $end                                                                      #    33/33

