# 2017-12-04 00:15:00.242733
# SECTION: 04_expressions
# TEST: 19
# INFO: function used as variable
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: FAIL
# 
# COMPILER STDERR:
# pedant.c: P_HandleOperand: l.536: Handle_operand: function as an operand in expression! not allowed
# Handle_operand: function as an operand in expression! not allowed. Line: 10
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:



# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 3
# CURRENT COMPILER EXIT CODE: 4
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' function used as variable
#   2: 
#   3: function foo() as integer
#   4: 	return 39
#   5: end function
#   6: 
#   7: scope
#   8: 	dim a as integer
#   9: 	a = 3 + foo
#  10: 	print a;
#  11: end scope

########################################

# Generated code                                                                #     2/31
# IFJ                                                                           #     3/31
# xbenes49 xbolsh00 xpolan09                                                    #     4/31
# 2017                                                                          #     5/31
.IFJcode17                                                                      #     7/31
CREATEFRAME                                                                     #     8/31
PUSHFRAME                                                                       #     9/31
DEFVAR LF@*tmp                                                                  #    10/31
DEFVAR LF@*foo                                                                  #    11/31
DEFVAR LF@*bar                                                                  #    12/31
JUMP $main                                                                      #    13/31
# function foo                                                                  #    16/31
LABEL foo                                                                       #    17/31
PUSHFRAME                                                                       #    18/31
DEFVAR LF@*tmp                                                                  #    19/31
DEFVAR LF@*foo                                                                  #    20/31
DEFVAR LF@*bar                                                                  #    21/31
DEFVAR LF@*ret                                                                  #    22/31
PUSHS int@39                                                                    #    23/31
POPS LF@*ret                                                                    #    24/31
CLEARS                                                                          #    25/31
RETURN                                                                          #    26/31
LABEL $main                                                                     #    28/31
DEFVAR LF@a                                                                     #    29/31
PUSHS int@0                                                                     #    30/31
POPS LF@a                                                                       #    31/31

