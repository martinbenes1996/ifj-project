# 2017-12-04 00:15:00.194892
# SECTION: 04_expressions
# TEST: 14
# INFO: Test for implicit conversion
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: BASE, UNARY
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: ICREATEFRAME at line: 8 with following arguments:
# Executing instruction: IPUSHFRAME at line: 9 with following arguments:
# Executing instruction: IDEFVAR at line: 10 with following arguments:
# Dest: LF@*tmp
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: LF@*foo
# Executing instruction: IDEFVAR at line: 12 with following arguments:
# Dest: LF@*bar
# Executing instruction: IJUMP at line: 13 with following arguments:
# Executing instruction: ILABEL at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 16 with following arguments:
# Dest: LF@a
# Executing instruction: IPUSHS at line: 17 with following arguments:
# Arg1: Const@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 18 with following arguments:
# Arg1: Stack@=0(double)
# Dest: LF@a()
# Executing instruction: IPUSHS at line: 19 with following arguments:
# Arg1: Const@=123.457(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 20 with following arguments:
# Arg1: Stack@=123.457(double)
# Dest: LF@a=0(double)
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: LF@b
# Executing instruction: IPUSHS at line: 22 with following arguments:
# Arg1: Const@=0(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 23 with following arguments:
# Arg1: Stack@=0(int)
# Dest: LF@b()
# Executing instruction: IPUSHS at line: 24 with following arguments:
# Arg1: Const@=456465(int)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 25 with following arguments:
# Arg1: Stack@=456465(int)
# Dest: LF@b=0(int)
# Executing instruction: IDEFVAR at line: 26 with following arguments:
# Dest: LF@c
# Executing instruction: IPUSHS at line: 27 with following arguments:
# Arg1: Const@=0(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 28 with following arguments:
# Arg1: Stack@=0(double)
# Dest: LF@c()
# Executing instruction: IPUSHS at line: 29 with following arguments:
# Arg1: LF@a=123.457(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 30 with following arguments:
# Arg1: LF@b=456465(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 31 with following arguments:
# Arg1: Stack@=456465(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 32 with following arguments:
# Arg1: Stack@=123.457(double)
# Arg2: Stack@=456465(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 33 with following arguments:
# Arg1: LF@b=456465(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 34 with following arguments:
# Arg1: Stack@=456465(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 35 with following arguments:
# Arg1: Stack@=56353799.505(double)
# Arg2: Stack@=456465(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 36 with following arguments:
# Arg1: LF@b=456465(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 37 with following arguments:
# Arg1: Stack@=456465(int)
# Dest: Stack@()
# Executing instruction: IMULTS at line: 38 with following arguments:
# Arg1: Stack@=123.457(double)
# Arg2: Stack@=456465(double)
# Dest: Stack@()
# Executing instruction: IPUSHS at line: 39 with following arguments:
# Arg1: LF@b=456465(int)
# Dest: Stack@()
# Executing instruction: IINT2FLOATS at line: 40 with following arguments:
# Arg1: Stack@=456465(int)
# Dest: Stack@()
# Executing instruction: IDIVS at line: 41 with following arguments:
# Arg1: Stack@=56353799.505(double)
# Arg2: Stack@=456465(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 42 with following arguments:
# Arg1: Stack@=123.457(double)
# Dest: LF@c=0(double)
# Executing instruction: IPUSHS at line: 43 with following arguments:
# Arg1: LF@c=123.457(double)
# Dest: Stack@()
# Executing instruction: IPOPS at line: 44 with following arguments:
# Arg1: Stack@=123.457(double)
# Dest: LF@*tmp()
# Executing instruction: IWRITE at line: 45 with following arguments:
# Arg1: LF@*tmp=123.457(double)
# Executing instruction: IJUMP at line: 46 with following arguments:
# Executing instruction: ILABEL at line: 47 with following arguments:
# Executing instruction: IGROOT at line: 49 with following arguments:
# I am Groot at 49 (213).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 213 (52+161)
# GROOT: 213
# 
#   1: ' Test for implicit conversion
#   2: SCOPE
#   3: 
#   4: 	dim a as double
#   5: 	a = 123.4565
#   6: 
#   7: 	dim b as integer
#   8: 	b = 456465
#   9: 
#  10: 	dim c as double
#  11: 	c = (((a * b) / b) * b) / b 
#  12: 
#  13: 	print c;
#  14: 
#  15: END SCOPE

########################################

# Generated code                                                                #     2/47
# IFJ                                                                           #     3/47
# xbenes49 xbolsh00 xpolan09                                                    #     4/47
# 2017                                                                          #     5/47
.IFJcode17                                                                      #     7/47
CREATEFRAME                                                                     #     8/47
PUSHFRAME                                                                       #     9/47
DEFVAR LF@*tmp                                                                  #    10/47
DEFVAR LF@*foo                                                                  #    11/47
DEFVAR LF@*bar                                                                  #    12/47
JUMP $main                                                                      #    13/47
LABEL $main                                                                     #    15/47
DEFVAR LF@a                                                                     #    16/47
PUSHS float@0                                                                   #    17/47
POPS LF@a                                                                       #    18/47
PUSHS float@123.457                                                             #    19/47
POPS LF@a                                                                       #    20/47
DEFVAR LF@b                                                                     #    21/47
PUSHS int@0                                                                     #    22/47
POPS LF@b                                                                       #    23/47
PUSHS int@456465                                                                #    24/47
POPS LF@b                                                                       #    25/47
DEFVAR LF@c                                                                     #    26/47
PUSHS float@0                                                                   #    27/47
POPS LF@c                                                                       #    28/47
PUSHS LF@a                                                                      #    29/47
PUSHS LF@b                                                                      #    30/47
INT2FLOATS                                                                      #    31/47
MULS                                                                            #    32/47
PUSHS LF@b                                                                      #    33/47
INT2FLOATS                                                                      #    34/47
DIVS                                                                            #    35/47
PUSHS LF@b                                                                      #    36/47
INT2FLOATS                                                                      #    37/47
MULS                                                                            #    38/47
PUSHS LF@b                                                                      #    39/47
INT2FLOATS                                                                      #    40/47
DIVS                                                                            #    41/47
POPS LF@c                                                                       #    42/47
PUSHS LF@c                                                                      #    43/47
POPS LF@*tmp                                                                    #    44/47
WRITE LF@*tmp                                                                   #    45/47
JUMP $end                                                                       #    46/47
LABEL $end                                                                      #    47/47

